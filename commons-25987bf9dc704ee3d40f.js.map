{"version":3,"file":"commons-25987bf9dc704ee3d40f.js","mappings":"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","sources":["webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://gatsby-starter-blog/./node_modules/@mdx-js/react/lib/index.js","webpack://gatsby-starter-blog/./node_modules/prismjs/components/prism-java.js","webpack://gatsby-starter-blog/./node_modules/prismjs/components/prism-ruby.js","webpack://gatsby-starter-blog/./node_modules/prismjs/components/prism-rust.js","webpack://gatsby-starter-blog/./node_modules/core-js/internals/get-substitution.js","webpack://gatsby-starter-blog/./node_modules/core-js/internals/is-regexp.js","webpack://gatsby-starter-blog/./node_modules/core-js/internals/regexp-flags.js","webpack://gatsby-starter-blog/./node_modules/core-js/internals/regexp-get-flags.js","webpack://gatsby-starter-blog/./node_modules/core-js/internals/to-string.js","webpack://gatsby-starter-blog/./node_modules/core-js/modules/es.string.replace-all.js","webpack://gatsby-starter-blog/./node_modules/core-js/modules/esnext.string.replace-all.js","webpack://gatsby-starter-blog/./src/components/header.tsx","webpack://gatsby-starter-blog/./src/hooks/site-metadata.tsx","webpack://gatsby-starter-blog/./src/components/footer.tsx","webpack://gatsby-starter-blog/./node_modules/@babel/runtime/helpers/esm/inherits.js","webpack://gatsby-starter-blog/./node_modules/prism-react-renderer/prism/index.js","webpack://gatsby-starter-blog/./node_modules/prism-react-renderer/dist/index.js","webpack://gatsby-starter-blog/./node_modules/prism-react-renderer/themes/duotoneDark/index.js","webpack://gatsby-starter-blog/./node_modules/prism-react-renderer/themes/dracula/index.js","webpack://gatsby-starter-blog/./src/components/codeBlock.tsx","webpack://gatsby-starter-blog/./src/components/layout.tsx","webpack://gatsby-starter-blog/./src/components/seo.tsx","webpack://gatsby-starter-blog/./src/elements/Tag.tsx","webpack://gatsby-starter-blog/./src/components/tagSection.tsx","webpack://gatsby-starter-blog/./src/elements/MajorHeading.tsx","webpack://gatsby-starter-blog/./src/elements/SmallDate.tsx","webpack://gatsby-starter-blog/./src/pages/index.tsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _defineProperty from \"/home/thomas/Documents/code/js/blog/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode} [children]\n *   Children.\n *\n * @callback MergeComponents\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\nimport React from 'react';\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\n\nexport var MDXContext = React.createContext({});\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\n\nexport function withMDXComponents(Component) {\n  return boundMDXComponent;\n  /**\n   * @param {Record<string, unknown> & {components?: Components}} props\n   * @returns {JSX.Element}\n   */\n\n  function boundMDXComponent(props) {\n    var allComponents = useMDXComponents(props.components);\n    return React.createElement(Component, _objectSpread(_objectSpread({}, props), {}, {\n      allComponents: allComponents\n    }));\n  }\n}\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components|MergeComponents} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\n\nexport function useMDXComponents(components) {\n  var contextComponents = React.useContext(MDXContext); // Memoize to avoid unnecessary top-level context changes\n\n  return React.useMemo(function () {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents);\n    }\n\n    return _objectSpread(_objectSpread({}, contextComponents), components);\n  }, [contextComponents, components]);\n}\n/** @type {Components} */\n\nvar emptyObject = {};\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\n\nexport function MDXProvider(_ref) {\n  var components = _ref.components,\n      children = _ref.children,\n      disableParentContext = _ref.disableParentContext;\n  var allComponents = useMDXComponents(components);\n\n  if (disableParentContext) {\n    allComponents = components || emptyObject;\n  }\n\n  return React.createElement(MDXContext.Provider, {\n    value: allComponents\n  }, children);\n}","(function (Prism) {\n  var keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/; // full package (optional) + parent classes (optional)\n\n  var classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source; // based on the java naming conventions\n\n  var className = {\n    pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n    lookbehind: true,\n    inside: {\n      'namespace': {\n        pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n        inside: {\n          'punctuation': /\\./\n        }\n      },\n      'punctuation': /\\./\n    }\n  };\n  Prism.languages.java = Prism.languages.extend('clike', {\n    'string': {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [className, {\n      // variables, parameters, and constructor references\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n      lookbehind: true,\n      inside: className.inside\n    }, {\n      // class names based on keyword\n      // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n      pattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n      lookbehind: true,\n      inside: className.inside\n    }],\n    'keyword': keywords,\n    'function': [Prism.languages.clike.function, {\n      pattern: /(::\\s*)[a-z_]\\w*/,\n      lookbehind: true\n    }],\n    'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n    'operator': {\n      pattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n      lookbehind: true\n    },\n    'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n  });\n  Prism.languages.insertBefore('java', 'string', {\n    'triple-quoted-string': {\n      // http://openjdk.java.net/jeps/355#Description\n      pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'char': {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('java', 'class-name', {\n    'annotation': {\n      pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'generics': {\n      pattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n      inside: {\n        'class-name': className,\n        'keyword': keywords,\n        'punctuation': /[<>(),.:]/,\n        'operator': /[?&|]/\n      }\n    },\n    'import': [{\n      pattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n      lookbehind: true,\n      inside: {\n        'namespace': className.inside.namespace,\n        'punctuation': /\\./,\n        'operator': /\\*/,\n        'class-name': /\\w+/\n      }\n    }, {\n      pattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n      lookbehind: true,\n      alias: 'static',\n      inside: {\n        'namespace': className.inside.namespace,\n        'static': /\\b\\w+$/,\n        'punctuation': /\\./,\n        'operator': /\\*/,\n        'class-name': /\\w+/\n      }\n    }],\n    'namespace': {\n      pattern: RegExp(/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(/<keyword>/g, function () {\n        return keywords.source;\n      })),\n      lookbehind: true,\n      inside: {\n        'punctuation': /\\./\n      }\n    }\n  });\n})(Prism);","/**\n * Original by Samuel Flores\n *\n * Adds the following new token classes:\n *     constant, builtin, variable, symbol, regex\n */\n(function (Prism) {\n  Prism.languages.ruby = Prism.languages.extend('clike', {\n    'comment': {\n      pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n      lookbehind: true,\n      inside: {\n        'punctuation': /[.\\\\]/\n      }\n    },\n    'keyword': /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n    'operator': /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n    'punctuation': /[(){}[\\].,;]/\n  });\n  Prism.languages.insertBefore('ruby', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  var interpolation = {\n    pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n    lookbehind: true,\n    inside: {\n      'content': {\n        pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      'delimiter': {\n        pattern: /^#\\{|\\}$/,\n        alias: 'punctuation'\n      }\n    }\n  };\n  delete Prism.languages.ruby.function;\n  var percentExpression = '(?:' + [/([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source, /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source, /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source, /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source].join('|') + ')';\n  var symbolName = /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/.source;\n  Prism.languages.insertBefore('ruby', 'keyword', {\n    'regex-literal': [{\n      pattern: RegExp(/%r/.source + percentExpression + /[egimnosux]{0,6}/.source),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'regex': /[\\s\\S]+/\n      }\n    }],\n    'variable': /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n    'symbol': [{\n      pattern: RegExp(/(^|[^:]):/.source + symbolName),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: RegExp(/([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source),\n      lookbehind: true,\n      greedy: true\n    }],\n    'method-definition': {\n      pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n      lookbehind: true,\n      inside: {\n        'function': /\\b\\w+$/,\n        'keyword': /^self\\b/,\n        'class-name': /^\\w+/,\n        'punctuation': /\\./\n      }\n    }\n  });\n  Prism.languages.insertBefore('ruby', 'string', {\n    'string-literal': [{\n      pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?/\n          }\n        },\n        'interpolation': interpolation,\n        'string': /[\\s\\S]+/\n      }\n    }, {\n      pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n      alias: 'heredoc-string',\n      greedy: true,\n      inside: {\n        'delimiter': {\n          pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n          inside: {\n            'symbol': /\\b\\w+/,\n            'punctuation': /^<<[-~]?'|'$/\n          }\n        },\n        'string': /[\\s\\S]+/\n      }\n    }],\n    'command-literal': [{\n      pattern: RegExp(/%x/.source + percentExpression),\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }, {\n      pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation,\n        'command': {\n          pattern: /[\\s\\S]+/,\n          alias: 'string'\n        }\n      }\n    }]\n  });\n  delete Prism.languages.ruby.string;\n  Prism.languages.insertBefore('ruby', 'number', {\n    'builtin': /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n    'constant': /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n  });\n  Prism.languages.rb = Prism.languages.ruby;\n})(Prism);","(function (Prism) {\n  var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source;\n\n  for (var i = 0; i < 2; i++) {\n    // support 4 levels of nested comments\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return multilineComment;\n    });\n  }\n\n  multilineComment = multilineComment.replace(/<self>/g, function () {\n    return /[^\\s\\S]/.source;\n  });\n  Prism.languages.rust = {\n    'comment': [{\n      pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n      lookbehind: true,\n      greedy: true\n    }, {\n      pattern: /(^|[^\\\\:])\\/\\/.*/,\n      lookbehind: true,\n      greedy: true\n    }],\n    'string': {\n      pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n      greedy: true\n    },\n    'char': {\n      pattern: /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n      greedy: true\n    },\n    'attribute': {\n      pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n      greedy: true,\n      alias: 'attr-name',\n      inside: {\n        'string': null // see below\n\n      }\n    },\n    // Closure params should not be confused with bitwise OR |\n    'closure-params': {\n      pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'closure-punctuation': {\n          pattern: /^\\||\\|$/,\n          alias: 'punctuation'\n        },\n        rest: null // see below\n\n      }\n    },\n    'lifetime-annotation': {\n      pattern: /'\\w+/,\n      alias: 'symbol'\n    },\n    'fragment-specifier': {\n      pattern: /(\\$\\w+:)[a-z]+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'variable': /\\$\\w+/,\n    'function-definition': {\n      pattern: /(\\bfn\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'type-definition': {\n      pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    'module-declaration': [{\n      pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n      lookbehind: true,\n      alias: 'namespace'\n    }, {\n      pattern: /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n      lookbehind: true,\n      alias: 'namespace',\n      inside: {\n        'punctuation': /::/\n      }\n    }],\n    'keyword': [// https://github.com/rust-lang/reference/blob/master/src/keywords.md\n    /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n    // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n    /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/],\n    // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n    // and Rust's naming conventions recommend snake_case anyway.\n    // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n    'function': /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n    'macro': {\n      pattern: /\\b\\w+!/,\n      alias: 'property'\n    },\n    'constant': /\\b[A-Z_][A-Z_\\d]+\\b/,\n    'class-name': /\\b[A-Z]\\w*\\b/,\n    'namespace': {\n      pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n      inside: {\n        'punctuation': /::/\n      }\n    },\n    // Hex, oct, bin, dec numbers with visual separators and type suffix\n    'number': /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'punctuation': /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n    'operator': /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n  };\n  Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust;\n  Prism.languages.rust['attribute'].inside['string'] = Prism.languages.rust['string'];\n})(Prism);","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isNullOrUndefined = require('../internals/is-null-or-undefined');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (!isNullOrUndefined(searchValue)) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.string.replace-all');\n","import { useStaticQuery, graphql, Link } from \"gatsby\"\nimport * as React from \"react\"\nimport { SiteMetadata, useSiteMetadata } from \"../hooks/site-metadata\"\n\nconst Header: React.FC = () => {\n  const siteMetadata: SiteMetadata = useSiteMetadata()\n  return (\n    <header className=\"terminal-nav\">\n      <div className=\"terminal-logo\">\n        <div className=\"logo terminal-prompt\">\n          <Link className=\"menu-item\" to=\"/\">/home/toerktumlare/</Link>\n        </div>\n      </div>\n      <nav className=\"terminal-menu\">\n        <ul>\n          <li>\n            <Link className=\"menu-item\" to=\"/\">/home</Link>\n          </li>\n          <li>\n            <Link className=\"menu-item\" to=\"/about\">/about</Link>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default Header\n","import { useStaticQuery, graphql } from \"gatsby\";\n\nexport interface SiteMetadata {\n    title: string,\n    description: string,\n    siteUrl: string,\n    author: { name: string, summary: string },\n    social: { twitter: string, linkedin: string, stack_overflow: string }\n}\n\nexport const useSiteMetadata = () => {\n    const { site } = useStaticQuery(\n        graphql`\n            query SiteMetaData {\n                site {\n                    siteMetadata {\n                        title,\n                        description\n                        siteUrl,\n                        author {\n                            name \n                            summary\n                        }\n                        social {\n                            twitter\n                            linkedin\n                            stack_overflow\n                        }\n                    }\n                }\n            }\n        `\n    )\n    return site.siteMetadata\n}","import React from \"react\"\nimport styled from \"styled-components\"\n\nconst Footer: React.FC = () => {\n  return (\n    <footer>\n      <FooterText>\n        © {new Date().getFullYear()}, Built by\n        {` `}\n        <a href=\"http://www.github.com/tandolf\">toerktumlare</a>\n      </FooterText>\n    </footer>\n  )\n}\n\nconst FooterText = styled.h3`\n    font-size: 14px;\n    padding-bottom: 10px;\n`;\n\nexport default Footer","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\n\n/**\n * prism-react-renderer:\n * This file has been modified to remove:\n * - globals and window dependency\n * - worker support\n * - highlightAll and other element dependent methods\n * - _.hooks helpers\n * - UMD/node-specific hacks\n * It has also been run through prettier\n */\nvar Prism = function () {\n  // Private helper vars\n  var lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n  var uniqueId = 0; // The grammar object for plaintext\n\n  var plainTextGrammar = {};\n  var _ = {\n    /**\n     * A namespace for utility methods.\n     *\n     * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n     * change or disappear at any time.\n     *\n     * @namespace\n     * @memberof Prism\n     */\n    util: {\n      encode: function encode(tokens) {\n        if (tokens instanceof Token) {\n          return new Token(tokens.type, encode(tokens.content), tokens.alias);\n        } else if (Array.isArray(tokens)) {\n          return tokens.map(encode);\n        } else {\n          return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n        }\n      },\n\n      /**\n       * Returns the name of the type of the given value.\n       *\n       * @param {any} o\n       * @returns {string}\n       * @example\n       * type(null)      === 'Null'\n       * type(undefined) === 'Undefined'\n       * type(123)       === 'Number'\n       * type('foo')     === 'String'\n       * type(true)      === 'Boolean'\n       * type([1, 2])    === 'Array'\n       * type({})        === 'Object'\n       * type(String)    === 'Function'\n       * type(/abc+/)    === 'RegExp'\n       */\n      type: function type(o) {\n        return Object.prototype.toString.call(o).slice(8, -1);\n      },\n\n      /**\n       * Returns a unique number for the given object. Later calls will still return the same number.\n       *\n       * @param {Object} obj\n       * @returns {number}\n       */\n      objId: function objId(obj) {\n        if (!obj['__id']) {\n          Object.defineProperty(obj, '__id', {\n            value: ++uniqueId\n          });\n        }\n\n        return obj['__id'];\n      },\n\n      /**\n       * Creates a deep clone of the given object.\n       *\n       * The main intended use of this function is to clone language definitions.\n       *\n       * @param {T} o\n       * @param {Record<number, any>} [visited]\n       * @returns {T}\n       * @template T\n       */\n      clone: function deepClone(o, visited) {\n        visited = visited || {};\n        var clone;\n        var id;\n\n        switch (_.util.type(o)) {\n          case 'Object':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone =\n            /** @type {Record<string, any>} */\n            {};\n            visited[id] = clone;\n\n            for (var key in o) {\n              if (o.hasOwnProperty(key)) {\n                clone[key] = deepClone(o[key], visited);\n              }\n            }\n\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          case 'Array':\n            id = _.util.objId(o);\n\n            if (visited[id]) {\n              return visited[id];\n            }\n\n            clone = [];\n            visited[id] = clone;\n\n            /** @type {Array} */\n\n            /** @type {any} */\n            o.forEach(function (v, i) {\n              clone[i] = deepClone(v, visited);\n            });\n            return (\n              /** @type {any} */\n              clone\n            );\n\n          default:\n            return o;\n        }\n      },\n\n      /**\n       * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n       *\n       * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n       *\n       * @param {Element} element\n       * @returns {string}\n       */\n      getLanguage: function getLanguage(element) {\n        while (element) {\n          var m = lang.exec(element.className);\n\n          if (m) {\n            return m[1].toLowerCase();\n          }\n\n          element = element.parentElement;\n        }\n\n        return 'none';\n      },\n\n      /**\n       * Sets the Prism `language-xxxx` class of the given element.\n       *\n       * @param {Element} element\n       * @param {string} language\n       * @returns {void}\n       */\n      setLanguage: function setLanguage(element, language) {\n        // remove all `language-xxxx` classes\n        // (this might leave behind a leading space)\n        element.className = element.className.replace(RegExp(lang, 'gi'), ''); // add the new `language-xxxx` class\n        // (using `classList` will automatically clean up spaces for us)\n\n        element.classList.add('language-' + language);\n      },\n\n      /**\n       * Returns whether a given class is active for `element`.\n       *\n       * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n       * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n       * given class is just the given class with a `no-` prefix.\n       *\n       * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n       * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n       * ancestors have the given class or the negated version of it, then the default activation will be returned.\n       *\n       * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n       * version of it, the class is considered active.\n       *\n       * @param {Element} element\n       * @param {string} className\n       * @param {boolean} [defaultActivation=false]\n       * @returns {boolean}\n       */\n      isActive: function isActive(element, className, defaultActivation) {\n        var no = 'no-' + className;\n\n        while (element) {\n          var classList = element.classList;\n\n          if (classList.contains(className)) {\n            return true;\n          }\n\n          if (classList.contains(no)) {\n            return false;\n          }\n\n          element = element.parentElement;\n        }\n\n        return !!defaultActivation;\n      }\n    },\n\n    /**\n     * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n     *\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    languages: {\n      /**\n       * The grammar for plain, unformatted text.\n       */\n      plain: plainTextGrammar,\n      plaintext: plainTextGrammar,\n      text: plainTextGrammar,\n      txt: plainTextGrammar,\n\n      /**\n       * Creates a deep copy of the language with the given id and appends the given tokens.\n       *\n       * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n       * will be overwritten at its original position.\n       *\n       * ## Best practices\n       *\n       * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n       * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n       * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n       *\n       * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n       * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n       *\n       * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n       * @param {Grammar} redef The new tokens to append.\n       * @returns {Grammar} The new language created.\n       * @public\n       * @example\n       * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n       *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n       *     // at its original position\n       *     'comment': { ... },\n       *     // CSS doesn't have a 'color' token, so this token will be appended\n       *     'color': /\\b(?:red|green|blue)\\b/\n       * });\n       */\n      extend: function extend(id, redef) {\n        var lang = _.util.clone(_.languages[id]);\n\n        for (var key in redef) {\n          lang[key] = redef[key];\n        }\n\n        return lang;\n      },\n\n      /**\n       * Inserts tokens _before_ another token in a language definition or any other grammar.\n       *\n       * ## Usage\n       *\n       * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n       * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n       * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n       * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n       * this:\n       *\n       * ```js\n       * Prism.languages.markup.style = {\n       *     // token\n       * };\n       * ```\n       *\n       * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n       * before existing tokens. For the CSS example above, you would use it like this:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'cdata', {\n       *     'style': {\n       *         // token\n       *     }\n       * });\n       * ```\n       *\n       * ## Special cases\n       *\n       * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n       * will be ignored.\n       *\n       * This behavior can be used to insert tokens after `before`:\n       *\n       * ```js\n       * Prism.languages.insertBefore('markup', 'comment', {\n       *     'comment': Prism.languages.markup.comment,\n       *     // tokens after 'comment'\n       * });\n       * ```\n       *\n       * ## Limitations\n       *\n       * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n       * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n       * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n       * deleting properties which is necessary to insert at arbitrary positions.\n       *\n       * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n       * Instead, it will create a new object and replace all references to the target object with the new one. This\n       * can be done without temporarily deleting properties, so the iteration order is well-defined.\n       *\n       * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n       * you hold the target object in a variable, then the value of the variable will not change.\n       *\n       * ```js\n       * var oldMarkup = Prism.languages.markup;\n       * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n       *\n       * assert(oldMarkup !== Prism.languages.markup);\n       * assert(newMarkup === Prism.languages.markup);\n       * ```\n       *\n       * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n       * object to be modified.\n       * @param {string} before The key to insert before.\n       * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n       * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n       * object to be modified.\n       *\n       * Defaults to `Prism.languages`.\n       * @returns {Grammar} The new grammar object.\n       * @public\n       */\n      insertBefore: function insertBefore(inside, before, insert, root) {\n        root = root ||\n        /** @type {any} */\n        _.languages;\n        var grammar = root[inside];\n        /** @type {Grammar} */\n\n        var ret = {};\n\n        for (var token in grammar) {\n          if (grammar.hasOwnProperty(token)) {\n            if (token == before) {\n              for (var newToken in insert) {\n                if (insert.hasOwnProperty(newToken)) {\n                  ret[newToken] = insert[newToken];\n                }\n              }\n            } // Do not insert token which also occur in insert. See #1525\n\n\n            if (!insert.hasOwnProperty(token)) {\n              ret[token] = grammar[token];\n            }\n          }\n        }\n\n        var old = root[inside];\n        root[inside] = ret; // Update references in other language definitions\n\n        _.languages.DFS(_.languages, function (key, value) {\n          if (value === old && key != inside) {\n            this[key] = ret;\n          }\n        });\n\n        return ret;\n      },\n      // Traverse a language definition with Depth First Search\n      DFS: function DFS(o, callback, type, visited) {\n        visited = visited || {};\n        var objId = _.util.objId;\n\n        for (var i in o) {\n          if (o.hasOwnProperty(i)) {\n            callback.call(o, i, o[i], type || i);\n            var property = o[i];\n\n            var propertyType = _.util.type(property);\n\n            if (propertyType === 'Object' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, null, visited);\n            } else if (propertyType === 'Array' && !visited[objId(property)]) {\n              visited[objId(property)] = true;\n              DFS(property, callback, i, visited);\n            }\n          }\n        }\n      }\n    },\n    plugins: {},\n\n    /**\n     * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n     * and the language definitions to use, and returns a string with the HTML produced.\n     *\n     * The following hooks will be run:\n     * 1. `before-tokenize`\n     * 2. `after-tokenize`\n     * 3. `wrap`: On each {@link Token}.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @param {string} language The name of the language definition passed to `grammar`.\n     * @returns {string} The highlighted HTML.\n     * @memberof Prism\n     * @public\n     * @example\n     * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n     */\n    highlight: function highlight(text, grammar, language) {\n      var env = {\n        code: text,\n        grammar: grammar,\n        language: language\n      };\n\n      _.hooks.run('before-tokenize', env);\n\n      env.tokens = _.tokenize(env.code, env.grammar);\n\n      _.hooks.run('after-tokenize', env);\n\n      return Token.stringify(_.util.encode(env.tokens), env.language);\n    },\n\n    /**\n     * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n     * and the language definitions to use, and returns an array with the tokenized code.\n     *\n     * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n     *\n     * This method could be useful in other contexts as well, as a very crude parser.\n     *\n     * @param {string} text A string with the code to be highlighted.\n     * @param {Grammar} grammar An object containing the tokens to use.\n     *\n     * Usually a language definition like `Prism.languages.markup`.\n     * @returns {TokenStream} An array of strings and tokens, a token stream.\n     * @memberof Prism\n     * @public\n     * @example\n     * let code = `var foo = 0;`;\n     * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n     * tokens.forEach(token => {\n     *     if (token instanceof Prism.Token && token.type === 'number') {\n     *         console.log(`Found numeric literal: ${token.content}`);\n     *     }\n     * });\n     */\n    tokenize: function tokenize(text, grammar) {\n      var rest = grammar.rest;\n\n      if (rest) {\n        for (var token in rest) {\n          grammar[token] = rest[token];\n        }\n\n        delete grammar.rest;\n      }\n\n      var tokenList = new LinkedList();\n      addAfter(tokenList, tokenList.head, text);\n      matchGrammar(text, tokenList, grammar, tokenList.head, 0);\n      return toArray(tokenList);\n    },\n\n    /**\n     * @namespace\n     * @memberof Prism\n     * @public\n     */\n    hooks: {\n      all: {},\n\n      /**\n       * Adds the given callback to the list of callbacks for the given hook.\n       *\n       * The callback will be invoked when the hook it is registered for is run.\n       * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n       *\n       * One callback function can be registered to multiple hooks and the same hook multiple times.\n       *\n       * @param {string} name The name of the hook.\n       * @param {HookCallback} callback The callback function which is given environment variables.\n       * @public\n       */\n      add: function add(name, callback) {\n        var hooks = _.hooks.all;\n        hooks[name] = hooks[name] || [];\n        hooks[name].push(callback);\n      },\n\n      /**\n       * Runs a hook invoking all registered callbacks with the given environment variables.\n       *\n       * Callbacks will be invoked synchronously and in the order in which they were registered.\n       *\n       * @param {string} name The name of the hook.\n       * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n       * @public\n       */\n      run: function run(name, env) {\n        var callbacks = _.hooks.all[name];\n\n        if (!callbacks || !callbacks.length) {\n          return;\n        }\n\n        for (var i = 0, callback; callback = callbacks[i++];) {\n          callback(env);\n        }\n      }\n    },\n    Token: Token\n  }; // Typescript note:\n  // The following can be used to import the Token type in JSDoc:\n  //\n  //   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n  /**\n   * Creates a new token.\n   *\n   * @param {string} type See {@link Token#type type}\n   * @param {string | TokenStream} content See {@link Token#content content}\n   * @param {string|string[]} [alias] The alias(es) of the token.\n   * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n   * @class\n   * @global\n   * @public\n   */\n\n  function Token(type, content, alias, matchedStr) {\n    /**\n     * The type of the token.\n     *\n     * This is usually the key of a pattern in a {@link Grammar}.\n     *\n     * @type {string}\n     * @see GrammarToken\n     * @public\n     */\n    this.type = type;\n    /**\n     * The strings or tokens contained by this token.\n     *\n     * This will be a token stream if the pattern matched also defined an `inside` grammar.\n     *\n     * @type {string | TokenStream}\n     * @public\n     */\n\n    this.content = content;\n    /**\n     * The alias(es) of the token.\n     *\n     * @type {string|string[]}\n     * @see GrammarToken\n     * @public\n     */\n\n    this.alias = alias; // Copy of the full string this token was created from\n\n    this.length = (matchedStr || '').length | 0;\n  }\n  /**\n   * A token stream is an array of strings and {@link Token Token} objects.\n   *\n   * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n   * them.\n   *\n   * 1. No adjacent strings.\n   * 2. No empty strings.\n   *\n   *    The only exception here is the token stream that only contains the empty string and nothing else.\n   *\n   * @typedef {Array<string | Token>} TokenStream\n   * @global\n   * @public\n   */\n\n  /**\n   * Converts the given token or token stream to an HTML representation.\n   *\n   * The following hooks will be run:\n   * 1. `wrap`: On each {@link Token}.\n   *\n   * @param {string | Token | TokenStream} o The token or token stream to be converted.\n   * @param {string} language The name of current language.\n   * @returns {string} The HTML representation of the token or token stream.\n   * @memberof Token\n   * @static\n   */\n\n\n  Token.stringify = function stringify(o, language) {\n    if (typeof o == 'string') {\n      return o;\n    }\n\n    if (Array.isArray(o)) {\n      var s = '';\n      o.forEach(function (e) {\n        s += stringify(e, language);\n      });\n      return s;\n    }\n\n    var env = {\n      type: o.type,\n      content: stringify(o.content, language),\n      tag: 'span',\n      classes: ['token', o.type],\n      attributes: {},\n      language: language\n    };\n    var aliases = o.alias;\n\n    if (aliases) {\n      if (Array.isArray(aliases)) {\n        Array.prototype.push.apply(env.classes, aliases);\n      } else {\n        env.classes.push(aliases);\n      }\n    }\n\n    _.hooks.run('wrap', env);\n\n    var attributes = '';\n\n    for (var name in env.attributes) {\n      attributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n    }\n\n    return '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n  };\n  /**\n   * @param {RegExp} pattern\n   * @param {number} pos\n   * @param {string} text\n   * @param {boolean} lookbehind\n   * @returns {RegExpExecArray | null}\n   */\n\n\n  function matchPattern(pattern, pos, text, lookbehind) {\n    pattern.lastIndex = pos;\n    var match = pattern.exec(text);\n\n    if (match && lookbehind && match[1]) {\n      // change the match to remove the text matched by the Prism lookbehind group\n      var lookbehindLength = match[1].length;\n      match.index += lookbehindLength;\n      match[0] = match[0].slice(lookbehindLength);\n    }\n\n    return match;\n  }\n  /**\n   * @param {string} text\n   * @param {LinkedList<string | Token>} tokenList\n   * @param {any} grammar\n   * @param {LinkedListNode<string | Token>} startNode\n   * @param {number} startPos\n   * @param {RematchOptions} [rematch]\n   * @returns {void}\n   * @private\n   *\n   * @typedef RematchOptions\n   * @property {string} cause\n   * @property {number} reach\n   */\n\n\n  function matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n    for (var token in grammar) {\n      if (!grammar.hasOwnProperty(token) || !grammar[token]) {\n        continue;\n      }\n\n      var patterns = grammar[token];\n      patterns = Array.isArray(patterns) ? patterns : [patterns];\n\n      for (var j = 0; j < patterns.length; ++j) {\n        if (rematch && rematch.cause == token + ',' + j) {\n          return;\n        }\n\n        var patternObj = patterns[j];\n        var inside = patternObj.inside;\n        var lookbehind = !!patternObj.lookbehind;\n        var greedy = !!patternObj.greedy;\n        var alias = patternObj.alias;\n\n        if (greedy && !patternObj.pattern.global) {\n          // Without the global flag, lastIndex won't work\n          var flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n          patternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n        }\n        /** @type {RegExp} */\n\n\n        var pattern = patternObj.pattern || patternObj;\n\n        for ( // iterate the token list and keep track of the current token/string position\n        var currentNode = startNode.next, pos = startPos; currentNode !== tokenList.tail; pos += currentNode.value.length, currentNode = currentNode.next) {\n          if (rematch && pos >= rematch.reach) {\n            break;\n          }\n\n          var str = currentNode.value;\n\n          if (tokenList.length > text.length) {\n            // Something went terribly wrong, ABORT, ABORT!\n            return;\n          }\n\n          if (str instanceof Token) {\n            continue;\n          }\n\n          var removeCount = 1; // this is the to parameter of removeBetween\n\n          var match;\n\n          if (greedy) {\n            match = matchPattern(pattern, pos, text, lookbehind);\n\n            if (!match || match.index >= text.length) {\n              break;\n            }\n\n            var from = match.index;\n            var to = match.index + match[0].length;\n            var p = pos; // find the node that contains the match\n\n            p += currentNode.value.length;\n\n            while (from >= p) {\n              currentNode = currentNode.next;\n              p += currentNode.value.length;\n            } // adjust pos (and p)\n\n\n            p -= currentNode.value.length;\n            pos = p; // the current node is a Token, then the match starts inside another Token, which is invalid\n\n            if (currentNode.value instanceof Token) {\n              continue;\n            } // find the last node which is affected by this match\n\n\n            for (var k = currentNode; k !== tokenList.tail && (p < to || typeof k.value === 'string'); k = k.next) {\n              removeCount++;\n              p += k.value.length;\n            }\n\n            removeCount--; // replace with the new match\n\n            str = text.slice(pos, p);\n            match.index -= pos;\n          } else {\n            match = matchPattern(pattern, 0, str, lookbehind);\n\n            if (!match) {\n              continue;\n            }\n          } // eslint-disable-next-line no-redeclare\n\n\n          var from = match.index;\n          var matchStr = match[0];\n          var before = str.slice(0, from);\n          var after = str.slice(from + matchStr.length);\n          var reach = pos + str.length;\n\n          if (rematch && reach > rematch.reach) {\n            rematch.reach = reach;\n          }\n\n          var removeFrom = currentNode.prev;\n\n          if (before) {\n            removeFrom = addAfter(tokenList, removeFrom, before);\n            pos += before.length;\n          }\n\n          removeRange(tokenList, removeFrom, removeCount);\n          var wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n          currentNode = addAfter(tokenList, removeFrom, wrapped);\n\n          if (after) {\n            addAfter(tokenList, currentNode, after);\n          }\n\n          if (removeCount > 1) {\n            // at least one Token object was removed, so we have to do some rematching\n            // this can only happen if the current pattern is greedy\n\n            /** @type {RematchOptions} */\n            var nestedRematch = {\n              cause: token + ',' + j,\n              reach: reach\n            };\n            matchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch); // the reach might have been extended because of the rematching\n\n            if (rematch && nestedRematch.reach > rematch.reach) {\n              rematch.reach = nestedRematch.reach;\n            }\n          }\n        }\n      }\n    }\n  }\n  /**\n   * @typedef LinkedListNode\n   * @property {T} value\n   * @property {LinkedListNode<T> | null} prev The previous node.\n   * @property {LinkedListNode<T> | null} next The next node.\n   * @template T\n   * @private\n   */\n\n  /**\n   * @template T\n   * @private\n   */\n\n\n  function LinkedList() {\n    /** @type {LinkedListNode<T>} */\n    var head = {\n      value: null,\n      prev: null,\n      next: null\n    };\n    /** @type {LinkedListNode<T>} */\n\n    var tail = {\n      value: null,\n      prev: head,\n      next: null\n    };\n    head.next = tail;\n    /** @type {LinkedListNode<T>} */\n\n    this.head = head;\n    /** @type {LinkedListNode<T>} */\n\n    this.tail = tail;\n    this.length = 0;\n  }\n  /**\n   * Adds a new node with the given value to the list.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {T} value\n   * @returns {LinkedListNode<T>} The added node.\n   * @template T\n   */\n\n\n  function addAfter(list, node, value) {\n    // assumes that node != list.tail && values.length >= 0\n    var next = node.next;\n    var newNode = {\n      value: value,\n      prev: node,\n      next: next\n    };\n    node.next = newNode;\n    next.prev = newNode;\n    list.length++;\n    return newNode;\n  }\n  /**\n   * Removes `count` nodes after the given node. The given node will not be removed.\n   *\n   * @param {LinkedList<T>} list\n   * @param {LinkedListNode<T>} node\n   * @param {number} count\n   * @template T\n   */\n\n\n  function removeRange(list, node, count) {\n    var next = node.next;\n\n    for (var i = 0; i < count && next !== list.tail; i++) {\n      next = next.next;\n    }\n\n    node.next = next;\n    next.prev = node;\n    list.length -= i;\n  }\n  /**\n   * @param {LinkedList<T>} list\n   * @returns {T[]}\n   * @template T\n   */\n\n\n  function toArray(list) {\n    var array = [];\n    var node = list.head.next;\n\n    while (node !== list.tail) {\n      array.push(node.value);\n      node = node.next;\n    }\n\n    return array;\n  }\n\n  return _;\n}();\n\nvar prism = Prism;\nPrism.default = Prism;\n/* This content is auto-generated to include some prismjs language components: */\n\n/* \"prismjs/components/prism-markup\" */\n\nprism.languages.markup = {\n  'comment': {\n    pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n    greedy: true\n  },\n  'prolog': {\n    pattern: /<\\?[\\s\\S]+?\\?>/,\n    greedy: true\n  },\n  'doctype': {\n    // https://www.w3.org/TR/xml/#NT-doctypedecl\n    pattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n    greedy: true,\n    inside: {\n      'internal-subset': {\n        pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n\n      },\n      'string': {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      'punctuation': /^<!|>$|[[\\]]/,\n      'doctype-tag': /^DOCTYPE/i,\n      'name': /[^\\s<>'\"]+/\n    }\n  },\n  'cdata': {\n    pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n    greedy: true\n  },\n  'tag': {\n    pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n    greedy: true,\n    inside: {\n      'tag': {\n        pattern: /^<\\/?[^\\s>\\/]+/,\n        inside: {\n          'punctuation': /^<\\/?/,\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      },\n      'special-attr': [],\n      'attr-value': {\n        pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n        inside: {\n          'punctuation': [{\n            pattern: /^=/,\n            alias: 'attr-equals'\n          }, /\"|'/]\n        }\n      },\n      'punctuation': /\\/?>/,\n      'attr-name': {\n        pattern: /[^\\s>\\/]+/,\n        inside: {\n          'namespace': /^[^\\s>\\/:]+:/\n        }\n      }\n    }\n  },\n  'entity': [{\n    pattern: /&[\\da-z]{1,8};/i,\n    alias: 'named-entity'\n  }, /&#x?[\\da-f]{1,8};/i]\n};\nprism.languages.markup['tag'].inside['attr-value'].inside['entity'] = prism.languages.markup['entity'];\nprism.languages.markup['doctype'].inside['internal-subset'].inside = prism.languages.markup; // Plugin to make entity title show the real entity, idea by Roman Komarov\n\nprism.hooks.add('wrap', function (env) {\n  if (env.type === 'entity') {\n    env.attributes['title'] = env.content.replace(/&amp;/, '&');\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addInlined', {\n  /**\n   * Adds an inlined language to markup.\n   *\n   * An example of an inlined language is CSS with `<style>` tags.\n   *\n   * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addInlined('style', 'css');\n   */\n  value: function addInlined(tagName, lang) {\n    var includedCdataInside = {};\n    includedCdataInside['language-' + lang] = {\n      pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n      lookbehind: true,\n      inside: prism.languages[lang]\n    };\n    includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n    var inside = {\n      'included-cdata': {\n        pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n        inside: includedCdataInside\n      }\n    };\n    inside['language-' + lang] = {\n      pattern: /[\\s\\S]+/,\n      inside: prism.languages[lang]\n    };\n    var def = {};\n    def[tagName] = {\n      pattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () {\n        return tagName;\n      }), 'i'),\n      lookbehind: true,\n      greedy: true,\n      inside: inside\n    };\n    prism.languages.insertBefore('markup', 'cdata', def);\n  }\n});\nObject.defineProperty(prism.languages.markup.tag, 'addAttribute', {\n  /**\n   * Adds an pattern to highlight languages embedded in HTML attributes.\n   *\n   * An example of an inlined language is CSS with `style` attributes.\n   *\n   * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n   * case insensitive.\n   * @param {string} lang The language key.\n   * @example\n   * addAttribute('style', 'css');\n   */\n  value: function value(attrName, lang) {\n    prism.languages.markup.tag.inside['special-attr'].push({\n      pattern: RegExp(/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source, 'i'),\n      lookbehind: true,\n      inside: {\n        'attr-name': /^[^\\s=]+/,\n        'attr-value': {\n          pattern: /=[\\s\\S]+/,\n          inside: {\n            'value': {\n              pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n              lookbehind: true,\n              alias: [lang, 'language-' + lang],\n              inside: prism.languages[lang]\n            },\n            'punctuation': [{\n              pattern: /^=/,\n              alias: 'attr-equals'\n            }, /\"|'/]\n          }\n        }\n      }\n    });\n  }\n});\nprism.languages.html = prism.languages.markup;\nprism.languages.mathml = prism.languages.markup;\nprism.languages.svg = prism.languages.markup;\nprism.languages.xml = prism.languages.extend('markup', {});\nprism.languages.ssml = prism.languages.xml;\nprism.languages.atom = prism.languages.xml;\nprism.languages.rss = prism.languages.xml;\n/* \"prismjs/components/prism-bash\" */\n\n(function (Prism) {\n  // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n  // + LC_ALL, RANDOM, REPLY, SECONDS.\n  // + make sure PS1..4 are here as they are not always set,\n  // - some useless things.\n  var envVars = '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b';\n  var commandAfterHeredoc = {\n    pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n    lookbehind: true,\n    alias: 'punctuation',\n    // this looks reasonably well in all themes\n    inside: null // see below\n\n  };\n  var insideString = {\n    'bash': commandAfterHeredoc,\n    'environment': {\n      pattern: RegExp('\\\\$' + envVars),\n      alias: 'constant'\n    },\n    'variable': [// [0]: Arithmetic Environment\n    {\n      pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n      greedy: true,\n      inside: {\n        // If there is a $ sign at the beginning highlight $(( and )) as variable\n        'variable': [{\n          pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n          lookbehind: true\n        }, /^\\$\\(\\(/],\n        'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n        // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n        'operator': /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n        // If there is no $ sign at the beginning highlight (( and )) as punctuation\n        'punctuation': /\\(\\(?|\\)\\)?|,|;/\n      }\n    }, // [1]: Command Substitution\n    {\n      pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n      greedy: true,\n      inside: {\n        'variable': /^\\$\\(|^`|\\)$|`$/\n      }\n    }, // [2]: Brace expansion\n    {\n      pattern: /\\$\\{[^}]+\\}/,\n      greedy: true,\n      inside: {\n        'operator': /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n        'punctuation': /[\\[\\]]/,\n        'environment': {\n          pattern: RegExp('(\\\\{)' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      }\n    }, /\\$(?:\\w+|[#?*!@$])/],\n    // Escape sequences from echo and printf's manuals, and escaped quotes.\n    'entity': /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n  };\n  Prism.languages.bash = {\n    'shebang': {\n      pattern: /^#!\\s*\\/.*/,\n      alias: 'important'\n    },\n    'comment': {\n      pattern: /(^|[^\"{\\\\$])#.*/,\n      lookbehind: true\n    },\n    'function-name': [// a) function foo {\n    // b) foo() {\n    // c) function foo() {\n    // but not “foo {”\n    {\n      // a) and c)\n      pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n      lookbehind: true,\n      alias: 'function'\n    }, {\n      // b)\n      pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n      alias: 'function'\n    }],\n    // Highlight variable names as variables in for and select beginnings.\n    'for-or-select': {\n      pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n      alias: 'variable',\n      lookbehind: true\n    },\n    // Highlight variable names as variables in the left-hand part\n    // of assignments (“=” and “+=”).\n    'assign-left': {\n      pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n      inside: {\n        'environment': {\n          pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n          lookbehind: true,\n          alias: 'constant'\n        }\n      },\n      alias: 'variable',\n      lookbehind: true\n    },\n    'string': [// Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, // Here-document with quotes around the tag\n    // → No expansion (so no “inside”).\n    {\n      pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'bash': commandAfterHeredoc\n      }\n    }, // “Normal” string\n    {\n      // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n      pattern: /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: insideString\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n      pattern: /(^|[^$\\\\])'[^']*'/,\n      lookbehind: true,\n      greedy: true\n    }, {\n      // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n      pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        'entity': insideString.entity\n      }\n    }],\n    'environment': {\n      pattern: RegExp('\\\\$?' + envVars),\n      alias: 'constant'\n    },\n    'variable': insideString.variable,\n    'function': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'keyword': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n    'builtin': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n      lookbehind: true,\n      // Alias added to make those easier to distinguish from strings.\n      alias: 'class-name'\n    },\n    'boolean': {\n      pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n      lookbehind: true\n    },\n    'file-descriptor': {\n      pattern: /\\B&\\d\\b/,\n      alias: 'important'\n    },\n    'operator': {\n      // Lots of redirections here, but not just that.\n      pattern: /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n      inside: {\n        'file-descriptor': {\n          pattern: /^\\d/,\n          alias: 'important'\n        }\n      }\n    },\n    'punctuation': /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n    'number': {\n      pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n      lookbehind: true\n    }\n  };\n  commandAfterHeredoc.inside = Prism.languages.bash;\n  /* Patterns in command substitution. */\n\n  var toBeCopied = ['comment', 'function-name', 'for-or-select', 'assign-left', 'string', 'environment', 'function', 'keyword', 'builtin', 'boolean', 'file-descriptor', 'operator', 'punctuation', 'number'];\n  var inside = insideString.variable[1].inside;\n\n  for (var i = 0; i < toBeCopied.length; i++) {\n    inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]];\n  }\n\n  Prism.languages.shell = Prism.languages.bash;\n})(prism);\n/* \"prismjs/components/prism-clike\" */\n\n\nprism.languages.clike = {\n  'comment': [{\n    pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    lookbehind: true,\n    greedy: true\n  }, {\n    pattern: /(^|[^\\\\:])\\/\\/.*/,\n    lookbehind: true,\n    greedy: true\n  }],\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n    lookbehind: true,\n    inside: {\n      'punctuation': /[.\\\\]/\n    }\n  },\n  'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'function': /\\b\\w+(?=\\()/,\n  'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n  'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\n/* \"prismjs/components/prism-c\" */\n\nprism.languages.c = prism.languages.extend('clike', {\n  'comment': {\n    pattern: /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'string': {\n    // https://en.cppreference.com/w/c/language/string_literal\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'class-name': {\n    pattern: /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n    lookbehind: true\n  },\n  'keyword': /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n  'function': /\\b[a-z_]\\w*(?=\\s*\\()/i,\n  'number': /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n  'operator': />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n});\nprism.languages.insertBefore('c', 'string', {\n  'char': {\n    // https://en.cppreference.com/w/c/language/character_constant\n    pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n    greedy: true\n  }\n});\nprism.languages.insertBefore('c', 'string', {\n  'macro': {\n    // allow for multiline macro definitions\n    // spaces after the # character compile fine with gcc\n    pattern: /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property',\n    inside: {\n      'string': [{\n        // highlight the path of the include statement as a string\n        pattern: /^(#\\s*include\\s*)<[^>]+>/,\n        lookbehind: true\n      }, prism.languages.c['string']],\n      'char': prism.languages.c['char'],\n      'comment': prism.languages.c['comment'],\n      'macro-name': [{\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n        lookbehind: true\n      }, {\n        pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      }],\n      // highlight macro directives as keywords\n      'directive': {\n        pattern: /^(#\\s*)[a-z]+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'directive-hash': /^#/,\n      'punctuation': /##|\\\\(?=[\\r\\n])/,\n      'expression': {\n        pattern: /\\S[\\s\\S]*/,\n        inside: prism.languages.c\n      }\n    }\n  }\n});\nprism.languages.insertBefore('c', 'function', {\n  // highlight predefined macros as constants\n  'constant': /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n});\ndelete prism.languages.c['boolean'];\n/* \"prismjs/components/prism-cpp\" */\n\n(function (Prism) {\n  var keyword = /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/;\n  var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(/<keyword>/g, function () {\n    return keyword.source;\n  });\n  Prism.languages.cpp = Prism.languages.extend('c', {\n    'class-name': [{\n      pattern: RegExp(/(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(/<keyword>/g, function () {\n        return keyword.source;\n      })),\n      lookbehind: true\n    }, // This is intended to capture the class name of method implementations like:\n    //   void foo::bar() const {}\n    // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n    // it starts with an uppercase letter. This approximation should give decent results.\n    /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n    //   Foo::~Foo() {}\n    /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n    // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n    /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/],\n    'keyword': keyword,\n    'number': {\n      pattern: /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n      greedy: true\n    },\n    'operator': />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n    'boolean': /\\b(?:false|true)\\b/\n  });\n  Prism.languages.insertBefore('cpp', 'string', {\n    'module': {\n      // https://en.cppreference.com/w/cpp/language/modules\n      pattern: RegExp(/(\\b(?:import|module)\\s+)/.source + '(?:' + // header-name\n      /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source + '|' + // module name or partition or both\n      /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(/<mod-name>/g, function () {\n        return modName;\n      }) + ')'),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'string': /^[<\"][\\s\\S]+/,\n        'operator': /:/,\n        'punctuation': /\\./\n      }\n    },\n    'raw-string': {\n      pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n      alias: 'string',\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'keyword', {\n    'generic-function': {\n      pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n      inside: {\n        'function': /^\\w+/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          alias: 'class-name',\n          inside: Prism.languages.cpp\n        }\n      }\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'operator', {\n    'double-colon': {\n      pattern: /::/,\n      alias: 'punctuation'\n    }\n  });\n  Prism.languages.insertBefore('cpp', 'class-name', {\n    // the base clause is an optional list of parent classes\n    // https://en.cppreference.com/w/cpp/language/class\n    'base-clause': {\n      pattern: /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n      lookbehind: true,\n      greedy: true,\n      inside: Prism.languages.extend('cpp', {})\n    }\n  });\n  Prism.languages.insertBefore('inside', 'double-colon', {\n    // All untokenized words that are not namespaces should be class names\n    'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n  }, Prism.languages.cpp['base-clause']);\n})(prism);\n/* \"prismjs/components/prism-css\" */\n\n\n(function (Prism) {\n  var string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n  Prism.languages.css = {\n    'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n    'atrule': {\n      pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n      inside: {\n        'rule': /^@[\\w-]+/,\n        'selector-function-argument': {\n          pattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        'keyword': {\n          pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n          lookbehind: true\n        } // See rest below\n\n      }\n    },\n    'url': {\n      // https://drafts.csswg.org/css-values-3/#urls\n      pattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n      greedy: true,\n      inside: {\n        'function': /^url/i,\n        'punctuation': /^\\(|\\)$/,\n        'string': {\n          pattern: RegExp('^' + string.source + '$'),\n          alias: 'url'\n        }\n      }\n    },\n    'selector': {\n      pattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n      lookbehind: true\n    },\n    'string': {\n      pattern: string,\n      greedy: true\n    },\n    'property': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n      lookbehind: true\n    },\n    'important': /!important\\b/i,\n    'function': {\n      pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n      lookbehind: true\n    },\n    'punctuation': /[(){};:,]/\n  };\n  Prism.languages.css['atrule'].inside.rest = Prism.languages.css;\n  var markup = Prism.languages.markup;\n\n  if (markup) {\n    markup.tag.addInlined('style', 'css');\n    markup.tag.addAttribute('style', 'css');\n  }\n})(prism);\n/* \"prismjs/components/prism-css-extras\" */\n\n\n(function (Prism) {\n  var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;\n  var selectorInside;\n  Prism.languages.css.selector = {\n    pattern: Prism.languages.css.selector.pattern,\n    lookbehind: true,\n    inside: selectorInside = {\n      'pseudo-element': /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n      'pseudo-class': /:[-\\w]+/,\n      'class': /\\.[-\\w]+/,\n      'id': /#[-\\w]+/,\n      'attribute': {\n        pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n        greedy: true,\n        inside: {\n          'punctuation': /^\\[|\\]$/,\n          'case-sensitivity': {\n            pattern: /(\\s)[si]$/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          'namespace': {\n            pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n            lookbehind: true,\n            inside: {\n              'punctuation': /\\|$/\n            }\n          },\n          'attr-name': {\n            pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n            lookbehind: true\n          },\n          'attr-value': [string, {\n            pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n            lookbehind: true\n          }],\n          'operator': /[|~*^$]?=/\n        }\n      },\n      'n-th': [{\n        pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'number': /[\\dn]+/,\n          'operator': /[+-]/\n        }\n      }, {\n        pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n        lookbehind: true\n      }],\n      'combinator': />|\\+|~|\\|\\|/,\n      // the `tag` token has been existed and removed.\n      // because we can't find a perfect tokenize to match it.\n      // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n      'punctuation': /[(),]/\n    }\n  };\n  Prism.languages.css['atrule'].inside['selector-function-argument'].inside = selectorInside;\n  Prism.languages.insertBefore('css', 'property', {\n    'variable': {\n      pattern: /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n      lookbehind: true\n    }\n  });\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  Prism.languages.insertBefore('css', 'function', {\n    'operator': {\n      pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n      lookbehind: true\n    },\n    // CAREFUL!\n    // Previewers and Inline color use hexcode and color.\n    'hexcode': {\n      pattern: /\\B#[\\da-f]{3,8}\\b/i,\n      alias: 'color'\n    },\n    'color': [{\n      pattern: /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n      lookbehind: true\n    }, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    // it's important that there is no boundary assertion after the hex digits\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'number': number\n  });\n})(prism);\n/* \"prismjs/components/prism-javascript\" */\n\n\nprism.languages.javascript = prism.languages.extend('clike', {\n  'class-name': [prism.languages.clike['class-name'], {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n    lookbehind: true\n  }],\n  'keyword': [{\n    pattern: /((?:^|\\})\\s*)catch\\b/,\n    lookbehind: true\n  }, {\n    pattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n    lookbehind: true\n  }],\n  // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n  'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n  'number': {\n    pattern: RegExp(/(^|[^\\w$])/.source + '(?:' + ( // constant\n    /NaN|Infinity/.source + '|' + // binary integer\n    /0[bB][01]+(?:_[01]+)*n?/.source + '|' + // octal integer\n    /0[oO][0-7]+(?:_[0-7]+)*n?/.source + '|' + // hexadecimal integer\n    /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source + '|' + // decimal bigint\n    /\\d+(?:_\\d+)*n/.source + '|' + // decimal number (integer or float) but no bigint\n    /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source) + ')' + /(?![\\w$])/.source),\n    lookbehind: true\n  },\n  'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\nprism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\nprism.languages.insertBefore('javascript', 'keyword', {\n  'regex': {\n    // eslint-disable-next-line regexp/no-dupe-characters-character-class\n    pattern: /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      'regex-source': {\n        pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n        lookbehind: true,\n        alias: 'language-regex',\n        inside: prism.languages.regex\n      },\n      'regex-delimiter': /^\\/|\\/$/,\n      'regex-flags': /^[a-z]+$/\n    }\n  },\n  // This must be declared before keyword because we use \"function\" inside the look-forward\n  'function-variable': {\n    pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n    alias: 'function'\n  },\n  'parameter': [{\n    pattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }, {\n    pattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n    lookbehind: true,\n    inside: prism.languages.javascript\n  }],\n  'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\nprism.languages.insertBefore('javascript', 'string', {\n  'hashbang': {\n    pattern: /^#!.*/,\n    greedy: true,\n    alias: 'comment'\n  },\n  'template-string': {\n    pattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n    greedy: true,\n    inside: {\n      'template-punctuation': {\n        pattern: /^`|`$/,\n        alias: 'string'\n      },\n      'interpolation': {\n        pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'interpolation-punctuation': {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: prism.languages.javascript\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'string-property': {\n    pattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n    lookbehind: true,\n    greedy: true,\n    alias: 'property'\n  }\n});\nprism.languages.insertBefore('javascript', 'operator', {\n  'literal-property': {\n    pattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n    lookbehind: true,\n    alias: 'property'\n  }\n});\n\nif (prism.languages.markup) {\n  prism.languages.markup.tag.addInlined('script', 'javascript'); // add attribute support for all DOM events.\n  // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\n  prism.languages.markup.tag.addAttribute(/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source, 'javascript');\n}\n\nprism.languages.js = prism.languages.javascript;\n/* \"prismjs/components/prism-coffeescript\" */\n\n(function (Prism) {\n  // Ignore comments starting with { to privilege string interpolation highlighting\n  var comment = /#(?!\\{).+/;\n  var interpolation = {\n    pattern: /#\\{[^}]+\\}/,\n    alias: 'variable'\n  };\n  Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n    'comment': comment,\n    'string': [// Strings are multiline\n    {\n      pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n      greedy: true\n    }, {\n      // Strings are multiline\n      pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        'interpolation': interpolation\n      }\n    }],\n    'keyword': /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n    'class-member': {\n      pattern: /@(?!\\d)\\w+/,\n      alias: 'variable'\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'comment', {\n    'multiline-comment': {\n      pattern: /###[\\s\\S]+?###/,\n      alias: 'comment'\n    },\n    // Block regexp can contain comments and interpolation\n    'block-regex': {\n      pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n      alias: 'regex',\n      inside: {\n        'comment': comment,\n        'interpolation': interpolation\n      }\n    }\n  });\n  Prism.languages.insertBefore('coffeescript', 'string', {\n    'inline-javascript': {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n      inside: {\n        'delimiter': {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        },\n        'script': {\n          pattern: /[\\s\\S]+/,\n          alias: 'language-javascript',\n          inside: Prism.languages.javascript\n        }\n      }\n    },\n    // Block strings\n    'multiline-string': [{\n      pattern: /'''[\\s\\S]*?'''/,\n      greedy: true,\n      alias: 'string'\n    }, {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        interpolation: interpolation\n      }\n    }]\n  });\n  Prism.languages.insertBefore('coffeescript', 'keyword', {\n    // Object property\n    'property': /(?!\\d)\\w+(?=\\s*:(?!:))/\n  });\n  delete Prism.languages.coffeescript['template-string'];\n  Prism.languages.coffee = Prism.languages.coffeescript;\n})(prism);\n/* \"prismjs/components/prism-yaml\" */\n\n\n(function (Prism) {\n  // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n  // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n  var anchorOrAlias = /[*&][^\\s[\\]{},]+/; // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n\n  var tag = /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/; // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n\n  var properties = '(?:' + tag.source + '(?:[ \\t]+' + anchorOrAlias.source + ')?|' + anchorOrAlias.source + '(?:[ \\t]+' + tag.source + ')?)'; // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n  // This is a simplified version that doesn't support \"#\" and multiline keys\n  // All these long scarry character classes are simplified versions of YAML's characters\n\n  var plainKey = /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(/<PLAIN>/g, function () {\n    return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/.source;\n  });\n  var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source;\n  /**\n   *\n   * @param {string} value\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function createValuePattern(value, flags) {\n    flags = (flags || '').replace(/m/g, '') + 'm'; // add m flag\n\n    var pattern = /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source.replace(/<<prop>>/g, function () {\n      return properties;\n    }).replace(/<<value>>/g, function () {\n      return value;\n    });\n    return RegExp(pattern, flags);\n  }\n\n  Prism.languages.yaml = {\n    'scalar': {\n      pattern: RegExp(/([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      })),\n      lookbehind: true,\n      alias: 'string'\n    },\n    'comment': /#.*/,\n    'key': {\n      pattern: RegExp(/((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source.replace(/<<prop>>/g, function () {\n        return properties;\n      }).replace(/<<key>>/g, function () {\n        return '(?:' + plainKey + '|' + string + ')';\n      })),\n      lookbehind: true,\n      greedy: true,\n      alias: 'atrule'\n    },\n    'directive': {\n      pattern: /(^[ \\t]*)%.+/m,\n      lookbehind: true,\n      alias: 'important'\n    },\n    'datetime': {\n      pattern: createValuePattern(/\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/.source),\n      lookbehind: true,\n      alias: 'number'\n    },\n    'boolean': {\n      pattern: createValuePattern(/false|true/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'null': {\n      pattern: createValuePattern(/null|~/.source, 'i'),\n      lookbehind: true,\n      alias: 'important'\n    },\n    'string': {\n      pattern: createValuePattern(string),\n      lookbehind: true,\n      greedy: true\n    },\n    'number': {\n      pattern: createValuePattern(/[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/.source, 'i'),\n      lookbehind: true\n    },\n    'tag': tag,\n    'important': anchorOrAlias,\n    'punctuation': /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n  };\n  Prism.languages.yml = Prism.languages.yaml;\n})(prism);\n/* \"prismjs/components/prism-markdown\" */\n\n\n(function (Prism) {\n  // Allow only one line break\n  var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source;\n  /**\n   * This function is intended for the creation of the bold or italic pattern.\n   *\n   * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n   *\n   * _Note:_ Keep in mind that this adds a capturing group.\n   *\n   * @param {string} pattern\n   * @returns {RegExp}\n   */\n\n  function createInline(pattern) {\n    pattern = pattern.replace(/<inner>/g, function () {\n      return inner;\n    });\n    return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')');\n  }\n\n  var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/.source;\n  var tableRow = /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(/__/g, function () {\n    return tableCell;\n  });\n  var tableLine = /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/.source;\n  Prism.languages.markdown = Prism.languages.extend('markup', {});\n  Prism.languages.insertBefore('markdown', 'prolog', {\n    'front-matter-block': {\n      pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'punctuation': /^---|---$/,\n        'front-matter': {\n          pattern: /\\S+(?:\\s+\\S+)*/,\n          alias: ['yaml', 'language-yaml'],\n          inside: Prism.languages.yaml\n        }\n      }\n    },\n    'blockquote': {\n      // > ...\n      pattern: /^>(?:[\\t ]*>)*/m,\n      alias: 'punctuation'\n    },\n    'table': {\n      pattern: RegExp('^' + tableRow + tableLine + '(?:' + tableRow + ')*', 'm'),\n      inside: {\n        'table-data-rows': {\n          pattern: RegExp('^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'),\n          lookbehind: true,\n          inside: {\n            'table-data': {\n              pattern: RegExp(tableCell),\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        },\n        'table-line': {\n          pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n          lookbehind: true,\n          inside: {\n            'punctuation': /\\||:?-{3,}:?/\n          }\n        },\n        'table-header-row': {\n          pattern: RegExp('^' + tableRow + '$'),\n          inside: {\n            'table-header': {\n              pattern: RegExp(tableCell),\n              alias: 'important',\n              inside: Prism.languages.markdown\n            },\n            'punctuation': /\\|/\n          }\n        }\n      }\n    },\n    'code': [{\n      // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n      pattern: /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n      lookbehind: true,\n      alias: 'keyword'\n    }, {\n      // ```optional language\n      // code block\n      // ```\n      pattern: /^```[\\s\\S]*?^```$/m,\n      greedy: true,\n      inside: {\n        'code-block': {\n          pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n          lookbehind: true\n        },\n        'code-language': {\n          pattern: /^(```).+/,\n          lookbehind: true\n        },\n        'punctuation': /```/\n      }\n    }],\n    'title': [{\n      // title 1\n      // =======\n      // title 2\n      // -------\n      pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n      alias: 'important',\n      inside: {\n        punctuation: /==+$|--+$/\n      }\n    }, {\n      // # title 1\n      // ###### title 6\n      pattern: /(^\\s*)#.+/m,\n      lookbehind: true,\n      alias: 'important',\n      inside: {\n        punctuation: /^#+|#+$/\n      }\n    }],\n    'hr': {\n      // ***\n      // ---\n      // * * *\n      // -----------\n      pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'list': {\n      // * item\n      // + item\n      // - item\n      // 1. item\n      pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'url-reference': {\n      // [id]: http://example.com \"Optional title\"\n      // [id]: http://example.com 'Optional title'\n      // [id]: http://example.com (Optional title)\n      // [id]: <http://example.com> \"Optional title\"\n      pattern: /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n      inside: {\n        'variable': {\n          pattern: /^(!?\\[)[^\\]]+/,\n          lookbehind: true\n        },\n        'string': /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n        'punctuation': /^[\\[\\]!:]|[<>]/\n      },\n      alias: 'url'\n    },\n    'bold': {\n      // **strong**\n      // __strong__\n      // allow one nested instance of italic text using the same delimiter\n      pattern: createInline(/\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^..)[\\s\\S]+(?=..$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /\\*\\*|__/\n      }\n    },\n    'italic': {\n      // *em*\n      // _em_\n      // allow one nested instance of bold text using the same delimiter\n      pattern: createInline(/\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^.)[\\s\\S]+(?=.$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /[*_]/\n      }\n    },\n    'strike': {\n      // ~~strike through~~\n      // ~strike~\n      // eslint-disable-next-line regexp/strict\n      pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'content': {\n          pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'punctuation': /~~?/\n      }\n    },\n    'code-snippet': {\n      // `code`\n      // ``code``\n      pattern: /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['code', 'keyword']\n    },\n    'url': {\n      // [example](http://example.com \"Optional title\")\n      // [example][id]\n      // [example] [id]\n      pattern: createInline(/!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/.source),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'operator': /^!/,\n        'content': {\n          pattern: /(^\\[)[^\\]]+(?=\\])/,\n          lookbehind: true,\n          inside: {} // see below\n\n        },\n        'variable': {\n          pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n          lookbehind: true\n        },\n        'url': {\n          pattern: /(^\\]\\()[^\\s)]+/,\n          lookbehind: true\n        },\n        'string': {\n          pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n          lookbehind: true\n        }\n      }\n    }\n  });\n  ['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n    ['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (inside) {\n      if (token !== inside) {\n        Prism.languages.markdown[token].inside.content.inside[inside] = Prism.languages.markdown[inside];\n      }\n    });\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'markdown' && env.language !== 'md') {\n      return;\n    }\n\n    function walkTokens(tokens) {\n      if (!tokens || typeof tokens === 'string') {\n        return;\n      }\n\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (token.type !== 'code') {\n          walkTokens(token.content);\n          continue;\n        }\n        /*\n         * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n         * is optional. But the grammar is defined so that there is only one case we have to handle:\n         *\n         * token.content = [\n         *     <span class=\"punctuation\">```</span>,\n         *     <span class=\"code-language\">xxxx</span>,\n         *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n         *     <span class=\"code-block\">...</span>,\n         *     '\\n', // exactly one new lines again\n         *     <span class=\"punctuation\">```</span>\n         * ];\n         */\n\n\n        var codeLang = token.content[1];\n        var codeBlock = token.content[3];\n\n        if (codeLang && codeBlock && codeLang.type === 'code-language' && codeBlock.type === 'code-block' && typeof codeLang.content === 'string') {\n          // this might be a language that Prism does not support\n          // do some replacements to support C++, C#, and F#\n          var lang = codeLang.content.replace(/\\b#/g, 'sharp').replace(/\\b\\+\\+/g, 'pp'); // only use the first word\n\n          lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase();\n          var alias = 'language-' + lang; // add alias\n\n          if (!codeBlock.alias) {\n            codeBlock.alias = [alias];\n          } else if (typeof codeBlock.alias === 'string') {\n            codeBlock.alias = [codeBlock.alias, alias];\n          } else {\n            codeBlock.alias.push(alias);\n          }\n        }\n      }\n    }\n\n    walkTokens(env.tokens);\n  });\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type !== 'code-block') {\n      return;\n    }\n\n    var codeLang = '';\n\n    for (var i = 0, l = env.classes.length; i < l; i++) {\n      var cls = env.classes[i];\n      var match = /language-(.+)/.exec(cls);\n\n      if (match) {\n        codeLang = match[1];\n        break;\n      }\n    }\n\n    var grammar = Prism.languages[codeLang];\n\n    if (!grammar) {\n      if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n        var id = 'md-' + new Date().valueOf() + '-' + Math.floor(Math.random() * 1e16);\n        env.attributes['id'] = id;\n        Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n          var ele = document.getElementById(id);\n\n          if (ele) {\n            ele.innerHTML = Prism.highlight(ele.textContent, Prism.languages[codeLang], codeLang);\n          }\n        });\n      }\n    } else {\n      env.content = Prism.highlight(textContent(env.content), grammar, codeLang);\n    }\n  });\n  var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi');\n  /**\n   * A list of known entity names.\n   *\n   * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n   *\n   * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n   */\n\n  var KNOWN_ENTITY_NAMES = {\n    'amp': '&',\n    'lt': '<',\n    'gt': '>',\n    'quot': '\"'\n  }; // IE 11 doesn't support `String.fromCodePoint`\n\n  var fromCodePoint = String.fromCodePoint || String.fromCharCode;\n  /**\n   * Returns the text content of a given HTML source code string.\n   *\n   * @param {string} html\n   * @returns {string}\n   */\n\n  function textContent(html) {\n    // remove all tags\n    var text = html.replace(tagPattern, ''); // decode known entities\n\n    text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n      code = code.toLowerCase();\n\n      if (code[0] === '#') {\n        var value;\n\n        if (code[1] === 'x') {\n          value = parseInt(code.slice(2), 16);\n        } else {\n          value = Number(code.slice(1));\n        }\n\n        return fromCodePoint(value);\n      } else {\n        var known = KNOWN_ENTITY_NAMES[code];\n\n        if (known) {\n          return known;\n        } // unable to decode\n\n\n        return m;\n      }\n    });\n    return text;\n  }\n\n  Prism.languages.md = Prism.languages.markdown;\n})(prism);\n/* \"prismjs/components/prism-graphql\" */\n\n\nprism.languages.graphql = {\n  'comment': /#.*/,\n  'description': {\n    pattern: /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n    greedy: true,\n    alias: 'string',\n    inside: {\n      'language-markdown': {\n        pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n        lookbehind: true,\n        inside: prism.languages.markdown\n      }\n    }\n  },\n  'string': {\n    pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n    greedy: true\n  },\n  'number': /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'boolean': /\\b(?:false|true)\\b/,\n  'variable': /\\$[a-z_]\\w*/i,\n  'directive': {\n    pattern: /@[a-z_]\\w*/i,\n    alias: 'function'\n  },\n  'attr-name': {\n    pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n    greedy: true\n  },\n  'atom-input': {\n    pattern: /\\b[A-Z]\\w*Input\\b/,\n    alias: 'class-name'\n  },\n  'scalar': /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n  'constant': /\\b[A-Z][A-Z_\\d]*\\b/,\n  'class-name': {\n    pattern: /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n    lookbehind: true\n  },\n  'fragment': {\n    pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-mutation': {\n    pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'definition-query': {\n    pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n    lookbehind: true,\n    alias: 'function'\n  },\n  'keyword': /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n  'operator': /[!=|&]|\\.{3}/,\n  'property-query': /\\w+(?=\\s*\\()/,\n  'object': /\\w+(?=\\s*\\{)/,\n  'punctuation': /[!(){}\\[\\]:=,]/,\n  'property': /\\w+/\n};\nprism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n  if (env.language !== 'graphql') {\n    return;\n  }\n  /**\n   * get the graphql token stream that we want to customize\n   *\n   * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n   * @type {Token[]}\n   */\n\n\n  var validTokens = env.tokens.filter(function (token) {\n    return typeof token !== 'string' && token.type !== 'comment' && token.type !== 'scalar';\n  });\n  var currentIndex = 0;\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {number} offset\n   * @returns {Token | undefined}\n   */\n\n  function getToken(offset) {\n    return validTokens[currentIndex + offset];\n  }\n  /**\n   * Returns whether the token relative to the current index has the given type.\n   *\n   * @param {readonly string[]} types\n   * @param {number} [offset=0]\n   * @returns {boolean}\n   */\n\n\n  function isTokenType(types, offset) {\n    offset = offset || 0;\n\n    for (var i = 0; i < types.length; i++) {\n      var token = getToken(i + offset);\n\n      if (!token || token.type !== types[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /**\n   * Returns the index of the closing bracket to an opening bracket.\n   *\n   * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n   *\n   * If no closing bracket could be found, `-1` will be returned.\n   *\n   * @param {RegExp} open\n   * @param {RegExp} close\n   * @returns {number}\n   */\n\n\n  function findClosingBracket(open, close) {\n    var stackHeight = 1;\n\n    for (var i = currentIndex; i < validTokens.length; i++) {\n      var token = validTokens[i];\n      var content = token.content;\n\n      if (token.type === 'punctuation' && typeof content === 'string') {\n        if (open.test(content)) {\n          stackHeight++;\n        } else if (close.test(content)) {\n          stackHeight--;\n\n          if (stackHeight === 0) {\n            return i;\n          }\n        }\n      }\n    }\n\n    return -1;\n  }\n  /**\n   * Adds an alias to the given token.\n   *\n   * @param {Token} token\n   * @param {string} alias\n   * @returns {void}\n   */\n\n\n  function addAlias(token, alias) {\n    var aliases = token.alias;\n\n    if (!aliases) {\n      token.alias = aliases = [];\n    } else if (!Array.isArray(aliases)) {\n      token.alias = aliases = [aliases];\n    }\n\n    aliases.push(alias);\n  }\n\n  for (; currentIndex < validTokens.length;) {\n    var startToken = validTokens[currentIndex++]; // add special aliases for mutation tokens\n\n    if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n      // any array of the names of all input variables (if any)\n      var inputVariables = [];\n\n      if (isTokenType(['definition-mutation', 'punctuation']) && getToken(1).content === '(') {\n        // definition\n        currentIndex += 2; // skip 'definition-mutation' and 'punctuation'\n\n        var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/);\n\n        if (definitionEnd === -1) {\n          continue;\n        } // find all input variables\n\n\n        for (; currentIndex < definitionEnd; currentIndex++) {\n          var t = getToken(0);\n\n          if (t.type === 'variable') {\n            addAlias(t, 'variable-input');\n            inputVariables.push(t.content);\n          }\n        }\n\n        currentIndex = definitionEnd + 1;\n      }\n\n      if (isTokenType(['punctuation', 'property-query']) && getToken(0).content === '{') {\n        currentIndex++; // skip opening bracket\n\n        addAlias(getToken(0), 'property-mutation');\n\n        if (inputVariables.length > 0) {\n          var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/);\n\n          if (mutationEnd === -1) {\n            continue;\n          } // give references to input variables a special alias\n\n\n          for (var i = currentIndex; i < mutationEnd; i++) {\n            var varToken = validTokens[i];\n\n            if (varToken.type === 'variable' && inputVariables.indexOf(varToken.content) >= 0) {\n              addAlias(varToken, 'variable-input');\n            }\n          }\n        }\n      }\n    }\n  }\n});\n/* \"prismjs/components/prism-sql\" */\n\nprism.languages.sql = {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n    lookbehind: true\n  },\n  'variable': [{\n    pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n    greedy: true\n  }, /@[\\w.$]+/],\n  'string': {\n    pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n    greedy: true,\n    lookbehind: true\n  },\n  'identifier': {\n    pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n    greedy: true,\n    lookbehind: true,\n    inside: {\n      'punctuation': /^`|`$/\n    }\n  },\n  'function': /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n  // Should we highlight user defined functions too?\n  'keyword': /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n  'boolean': /\\b(?:FALSE|NULL|TRUE)\\b/i,\n  'number': /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n  'operator': /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n  'punctuation': /[;[\\]()`,.]/\n};\n/* \"prismjs/components/prism-js-templates\" */\n\n(function (Prism) {\n  var templateString = Prism.languages.javascript['template-string']; // see the pattern in prism-javascript.js\n\n  var templateLiteralPattern = templateString.pattern.source;\n  var interpolationObject = templateString.inside['interpolation'];\n  var interpolationPunctuationObject = interpolationObject.inside['interpolation-punctuation'];\n  var interpolationPattern = interpolationObject.pattern.source;\n  /**\n   * Creates a new pattern to match a template string with a special tag.\n   *\n   * This will return `undefined` if there is no grammar with the given language id.\n   *\n   * @param {string} language The language id of the embedded language. E.g. `markdown`.\n   * @param {string} tag The regex pattern to match the tag.\n   * @returns {object | undefined}\n   * @example\n   * createTemplate('css', /\\bcss/.source);\n   */\n\n  function createTemplate(language, tag) {\n    if (!Prism.languages[language]) {\n      return undefined;\n    }\n\n    return {\n      pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        'embedded-code': {\n          pattern: /[\\s\\S]+/,\n          alias: language\n        }\n      }\n    };\n  }\n\n  Prism.languages.javascript['template-string'] = [// styled-jsx:\n  //   css`a { color: #25F; }`\n  // styled-components:\n  //   styled.h1`color: red;`\n  createTemplate('css', /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/.source), // html`<p></p>`\n  // div.innerHTML = `<p></p>`\n  createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n  createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n  createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n  createTemplate('graphql', /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source), // sql`...`\n  createTemplate('sql', /\\bsql/.source), // vanilla template string\n  templateString].filter(Boolean);\n  /**\n   * Returns a specific placeholder literal for the given language.\n   *\n   * @param {number} counter\n   * @param {string} language\n   * @returns {string}\n   */\n\n  function getPlaceholder(counter, language) {\n    return '___' + language.toUpperCase() + '_' + counter + '___';\n  }\n  /**\n   * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n   *\n   * @param {string} code\n   * @param {any} grammar\n   * @param {string} language\n   * @returns {(string|Token)[]}\n   */\n\n\n  function tokenizeWithHooks(code, grammar, language) {\n    var env = {\n      code: code,\n      grammar: grammar,\n      language: language\n    };\n    Prism.hooks.run('before-tokenize', env);\n    env.tokens = Prism.tokenize(env.code, env.grammar);\n    Prism.hooks.run('after-tokenize', env);\n    return env.tokens;\n  }\n  /**\n   * Returns the token of the given JavaScript interpolation expression.\n   *\n   * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n   * @returns {Token}\n   */\n\n\n  function tokenizeInterpolationExpression(expression) {\n    var tempGrammar = {};\n    tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject;\n    /** @type {Array} */\n\n    var tokens = Prism.tokenize(expression, tempGrammar);\n\n    if (tokens.length === 3) {\n      /**\n       * The token array will look like this\n       * [\n       *     [\"interpolation-punctuation\", \"${\"]\n       *     \"...\" // JavaScript expression of the interpolation\n       *     [\"interpolation-punctuation\", \"}\"]\n       * ]\n       */\n      var args = [1, 1];\n      args.push.apply(args, tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript'));\n      tokens.splice.apply(tokens, args);\n    }\n\n    return new Prism.Token('interpolation', tokens, interpolationObject.alias, expression);\n  }\n  /**\n   * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n   *\n   * This function has 3 phases:\n   *\n   * 1. Replace all JavaScript interpolation expression with a placeholder.\n   *    The placeholder will have the syntax of a identify of the target language.\n   * 2. Tokenize the code with placeholders.\n   * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n   *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n   *    tokenized as two tokens by the grammar of the embedded language.\n   *\n   * @param {string} code\n   * @param {object} grammar\n   * @param {string} language\n   * @returns {Token}\n   */\n\n\n  function tokenizeEmbedded(code, grammar, language) {\n    // 1. First filter out all interpolations\n    // because they might be escaped, we need a lookbehind, so we use Prism\n\n    /** @type {(Token|string)[]} */\n    var _tokens = Prism.tokenize(code, {\n      'interpolation': {\n        pattern: RegExp(interpolationPattern),\n        lookbehind: true\n      }\n    }); // replace all interpolations with a placeholder which is not in the code already\n\n\n    var placeholderCounter = 0;\n    /** @type {Object<string, string>} */\n\n    var placeholderMap = {};\n\n    var embeddedCode = _tokens.map(function (token) {\n      if (typeof token === 'string') {\n        return token;\n      } else {\n        var interpolationExpression = token.content;\n        var placeholder;\n\n        while (code.indexOf(placeholder = getPlaceholder(placeholderCounter++, language)) !== -1) {\n          /* noop */\n        }\n\n        placeholderMap[placeholder] = interpolationExpression;\n        return placeholder;\n      }\n    }).join(''); // 2. Tokenize the embedded code\n\n\n    var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language); // 3. Re-insert the interpolation\n\n    var placeholders = Object.keys(placeholderMap);\n    placeholderCounter = 0;\n    /**\n     *\n     * @param {(Token|string)[]} tokens\n     * @returns {void}\n     */\n\n    function walkTokens(tokens) {\n      for (var i = 0; i < tokens.length; i++) {\n        if (placeholderCounter >= placeholders.length) {\n          return;\n        }\n\n        var token = tokens[i];\n\n        if (typeof token === 'string' || typeof token.content === 'string') {\n          var placeholder = placeholders[placeholderCounter];\n          var s = typeof token === 'string' ? token :\n          /** @type {string} */\n          token.content;\n          var index = s.indexOf(placeholder);\n\n          if (index !== -1) {\n            ++placeholderCounter;\n            var before = s.substring(0, index);\n            var middle = tokenizeInterpolationExpression(placeholderMap[placeholder]);\n            var after = s.substring(index + placeholder.length);\n            var replacement = [];\n\n            if (before) {\n              replacement.push(before);\n            }\n\n            replacement.push(middle);\n\n            if (after) {\n              var afterTokens = [after];\n              walkTokens(afterTokens);\n              replacement.push.apply(replacement, afterTokens);\n            }\n\n            if (typeof token === 'string') {\n              tokens.splice.apply(tokens, [i, 1].concat(replacement));\n              i += replacement.length - 1;\n            } else {\n              token.content = replacement;\n            }\n          }\n        } else {\n          var content = token.content;\n\n          if (Array.isArray(content)) {\n            walkTokens(content);\n          } else {\n            walkTokens([content]);\n          }\n        }\n      }\n    }\n\n    walkTokens(embeddedTokens);\n    return new Prism.Token(language, embeddedTokens, 'language-' + language, code);\n  }\n  /**\n   * The languages for which JS templating will handle tagged template literals.\n   *\n   * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n   */\n\n\n  var supportedLanguages = {\n    'javascript': true,\n    'js': true,\n    'typescript': true,\n    'ts': true,\n    'jsx': true,\n    'tsx': true\n  };\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (!(env.language in supportedLanguages)) {\n      return;\n    }\n    /**\n     * Finds and tokenizes all template strings with an embedded languages.\n     *\n     * @param {(Token | string)[]} tokens\n     * @returns {void}\n     */\n\n\n    function findTemplateStrings(tokens) {\n      for (var i = 0, l = tokens.length; i < l; i++) {\n        var token = tokens[i];\n\n        if (typeof token === 'string') {\n          continue;\n        }\n\n        var content = token.content;\n\n        if (!Array.isArray(content)) {\n          if (typeof content !== 'string') {\n            findTemplateStrings([content]);\n          }\n\n          continue;\n        }\n\n        if (token.type === 'template-string') {\n          /**\n           * A JavaScript template-string token will look like this:\n           *\n           * [\"template-string\", [\n           *     [\"template-punctuation\", \"`\"],\n           *     (\n           *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n           *         or\n           *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n           *                                  It also has an alias which is the language of the embedded code.\n           *     ),\n           *     [\"template-punctuation\", \"`\"]\n           * ]]\n           */\n          var embedded = content[1];\n\n          if (content.length === 3 && typeof embedded !== 'string' && embedded.type === 'embedded-code') {\n            // get string content\n            var code = stringContent(embedded);\n            var alias = embedded.alias;\n            var language = Array.isArray(alias) ? alias[0] : alias;\n            var grammar = Prism.languages[language];\n\n            if (!grammar) {\n              // the embedded language isn't registered.\n              continue;\n            }\n\n            content[1] = tokenizeEmbedded(code, grammar, language);\n          }\n        } else {\n          findTemplateStrings(content);\n        }\n      }\n    }\n\n    findTemplateStrings(env.tokens);\n  });\n  /**\n   * Returns the string content of a token or token stream.\n   *\n   * @param {string | Token | (string | Token)[]} value\n   * @returns {string}\n   */\n\n  function stringContent(value) {\n    if (typeof value === 'string') {\n      return value;\n    } else if (Array.isArray(value)) {\n      return value.map(stringContent).join('');\n    } else {\n      return stringContent(value.content);\n    }\n  }\n})(prism);\n/* \"prismjs/components/prism-typescript\" */\n\n\n(function (Prism) {\n  Prism.languages.typescript = Prism.languages.extend('javascript', {\n    'class-name': {\n      pattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n\n    },\n    'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n  }); // The keywords TypeScript adds to JavaScript\n\n  Prism.languages.typescript.keyword.push(/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n  /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n  /\\btype\\b(?=\\s*(?:[\\{*]|$))/); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.typescript['parameter'];\n  delete Prism.languages.typescript['literal-property']; // a version of typescript specifically for highlighting types\n\n  var typeInside = Prism.languages.extend('typescript', {});\n  delete typeInside['class-name'];\n  Prism.languages.typescript['class-name'].inside = typeInside;\n  Prism.languages.insertBefore('typescript', 'function', {\n    'decorator': {\n      pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n      inside: {\n        'at': {\n          pattern: /^@/,\n          alias: 'operator'\n        },\n        'function': /^[\\s\\S]+/\n      }\n    },\n    'generic-function': {\n      // e.g. foo<T extends \"bar\" | \"baz\">( ...\n      pattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n        'generic': {\n          pattern: /<[\\s\\S]+/,\n          // everything after the first <\n          alias: 'class-name',\n          inside: typeInside\n        }\n      }\n    }\n  });\n  Prism.languages.ts = Prism.languages.typescript;\n})(prism);\n/* \"prismjs/components/prism-js-extras\" */\n\n\n(function (Prism) {\n  Prism.languages.insertBefore('javascript', 'function-variable', {\n    'method-variable': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function-variable'].pattern.source),\n      lookbehind: true,\n      alias: ['function-variable', 'method', 'function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'function', {\n    'method': {\n      pattern: RegExp('(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source),\n      lookbehind: true,\n      alias: ['function', 'property-access']\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'constant', {\n    'known-class-name': [{\n      // standard built-ins\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n      pattern: /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n      alias: 'class-name'\n    }, {\n      // errors\n      pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n      alias: 'class-name'\n    }]\n  });\n  /**\n   * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n   *\n   * @param {string} source\n   * @param {string} [flags]\n   * @returns {RegExp}\n   */\n\n  function withId(source, flags) {\n    return RegExp(source.replace(/<ID>/g, function () {\n      return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source;\n    }), flags);\n  }\n\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    'imports': {\n      // https://tc39.es/ecma262/#sec-imports\n      pattern: withId(/(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    },\n    'exports': {\n      // https://tc39.es/ecma262/#sec-exports\n      pattern: withId(/(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/.source),\n      lookbehind: true,\n      inside: Prism.languages.javascript\n    }\n  });\n  Prism.languages.javascript['keyword'].unshift({\n    pattern: /\\b(?:as|default|export|from|import)\\b/,\n    alias: 'module'\n  }, {\n    pattern: /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n    alias: 'control-flow'\n  }, {\n    pattern: /\\bnull\\b/,\n    alias: ['null', 'nil']\n  }, {\n    pattern: /\\bundefined\\b/,\n    alias: 'nil'\n  });\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'spread': {\n      pattern: /\\.{3}/,\n      alias: 'operator'\n    },\n    'arrow': {\n      pattern: /=>/,\n      alias: 'operator'\n    }\n  });\n  Prism.languages.insertBefore('javascript', 'punctuation', {\n    'property-access': {\n      pattern: withId(/(\\.\\s*)#?<ID>/.source),\n      lookbehind: true\n    },\n    'maybe-class-name': {\n      pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n      lookbehind: true\n    },\n    'dom': {\n      // this contains only a few commonly used DOM variables\n      pattern: /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n      alias: 'variable'\n    },\n    'console': {\n      pattern: /\\bconsole(?=\\s*\\.)/,\n      alias: 'class-name'\n    }\n  }); // add 'maybe-class-name' to tokens which might be a class name\n\n  var maybeClassNameTokens = ['function', 'function-variable', 'method', 'method-variable', 'property-access'];\n\n  for (var i = 0; i < maybeClassNameTokens.length; i++) {\n    var token = maybeClassNameTokens[i];\n    var value = Prism.languages.javascript[token]; // convert regex to object\n\n    if (Prism.util.type(value) === 'RegExp') {\n      value = Prism.languages.javascript[token] = {\n        pattern: value\n      };\n    } // keep in mind that we don't support arrays\n\n\n    var inside = value.inside || {};\n    value.inside = inside;\n    inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/;\n  }\n})(prism);\n/* \"prismjs/components/prism-jsx\" */\n\n\n(function (Prism) {\n  var javascript = Prism.util.clone(Prism.languages.javascript);\n  var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source;\n  var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source;\n  var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source;\n  /**\n   * @param {string} source\n   * @param {string} [flags]\n   */\n\n  function re(source, flags) {\n    source = source.replace(/<S>/g, function () {\n      return space;\n    }).replace(/<BRACES>/g, function () {\n      return braces;\n    }).replace(/<SPREAD>/g, function () {\n      return spread;\n    });\n    return RegExp(source, flags);\n  }\n\n  spread = re(spread).source;\n  Prism.languages.jsx = Prism.languages.extend('markup', javascript);\n  Prism.languages.jsx.tag.pattern = re(/<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/.source);\n  Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/;\n  Prism.languages.jsx.tag.inside['attr-value'].pattern = /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/;\n  Prism.languages.jsx.tag.inside['tag'].inside['class-name'] = /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/;\n  Prism.languages.jsx.tag.inside['comment'] = javascript['comment'];\n  Prism.languages.insertBefore('inside', 'attr-name', {\n    'spread': {\n      pattern: re(/<SPREAD>/.source),\n      inside: Prism.languages.jsx\n    }\n  }, Prism.languages.jsx.tag);\n  Prism.languages.insertBefore('inside', 'special-attr', {\n    'script': {\n      // Allow for two levels of nesting\n      pattern: re(/=<BRACES>/.source),\n      alias: 'language-javascript',\n      inside: {\n        'script-punctuation': {\n          pattern: /^=(?=\\{)/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.jsx\n      }\n    }\n  }, Prism.languages.jsx.tag); // The following will handle plain text inside tags\n\n  var stringifyToken = function stringifyToken(token) {\n    if (!token) {\n      return '';\n    }\n\n    if (typeof token === 'string') {\n      return token;\n    }\n\n    if (typeof token.content === 'string') {\n      return token.content;\n    }\n\n    return token.content.map(stringifyToken).join('');\n  };\n\n  var walkTokens = function walkTokens(tokens) {\n    var openedTags = [];\n\n    for (var i = 0; i < tokens.length; i++) {\n      var token = tokens[i];\n      var notTagNorBrace = false;\n\n      if (typeof token !== 'string') {\n        if (token.type === 'tag' && token.content[0] && token.content[0].type === 'tag') {\n          // We found a tag, now find its kind\n          if (token.content[0].content[0].content === '</') {\n            // Closing tag\n            if (openedTags.length > 0 && openedTags[openedTags.length - 1].tagName === stringifyToken(token.content[0].content[1])) {\n              // Pop matching opening tag\n              openedTags.pop();\n            }\n          } else {\n            if (token.content[token.content.length - 1].content === '/>') ;else {\n              // Opening tag\n              openedTags.push({\n                tagName: stringifyToken(token.content[0].content[1]),\n                openedBraces: 0\n              });\n            }\n          }\n        } else if (openedTags.length > 0 && token.type === 'punctuation' && token.content === '{') {\n          // Here we might have entered a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces++;\n        } else if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces > 0 && token.type === 'punctuation' && token.content === '}') {\n          // Here we might have left a JSX context inside a tag\n          openedTags[openedTags.length - 1].openedBraces--;\n        } else {\n          notTagNorBrace = true;\n        }\n      }\n\n      if (notTagNorBrace || typeof token === 'string') {\n        if (openedTags.length > 0 && openedTags[openedTags.length - 1].openedBraces === 0) {\n          // Here we are inside a tag, and not inside a JSX context.\n          // That's plain text: drop any tokens matched.\n          var plainText = stringifyToken(token); // And merge text with adjacent text\n\n          if (i < tokens.length - 1 && (typeof tokens[i + 1] === 'string' || tokens[i + 1].type === 'plain-text')) {\n            plainText += stringifyToken(tokens[i + 1]);\n            tokens.splice(i + 1, 1);\n          }\n\n          if (i > 0 && (typeof tokens[i - 1] === 'string' || tokens[i - 1].type === 'plain-text')) {\n            plainText = stringifyToken(tokens[i - 1]) + plainText;\n            tokens.splice(i - 1, 1);\n            i--;\n          }\n\n          tokens[i] = new Prism.Token('plain-text', plainText, null, plainText);\n        }\n      }\n\n      if (token.content && typeof token.content !== 'string') {\n        walkTokens(token.content);\n      }\n    }\n  };\n\n  Prism.hooks.add('after-tokenize', function (env) {\n    if (env.language !== 'jsx' && env.language !== 'tsx') {\n      return;\n    }\n\n    walkTokens(env.tokens);\n  });\n})(prism);\n/* \"prismjs/components/prism-diff\" */\n\n\n(function (Prism) {\n  Prism.languages.diff = {\n    'coord': [// Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n    /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n    /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n    /^\\d.*$/m] // deleted, inserted, unchanged, diff\n\n  };\n  /**\n   * A map from the name of a block to its line prefix.\n   *\n   * @type {Object<string, string>}\n   */\n\n  var PREFIXES = {\n    'deleted-sign': '-',\n    'deleted-arrow': '<',\n    'inserted-sign': '+',\n    'inserted-arrow': '>',\n    'unchanged': ' ',\n    'diff': '!'\n  }; // add a token for each prefix\n\n  Object.keys(PREFIXES).forEach(function (name) {\n    var prefix = PREFIXES[name];\n    var alias = [];\n\n    if (!/^\\w+$/.test(name)) {\n      // \"deleted-sign\" -> \"deleted\"\n      alias.push(/\\w+/.exec(name)[0]);\n    }\n\n    if (name === 'diff') {\n      alias.push('bold');\n    }\n\n    Prism.languages.diff[name] = {\n      pattern: RegExp('^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+', 'm'),\n      alias: alias,\n      inside: {\n        'line': {\n          pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n          lookbehind: true\n        },\n        'prefix': {\n          pattern: /[\\s\\S]/,\n          alias: /\\w+/.exec(name)[0]\n        }\n      }\n    };\n  }); // make prefixes available to Diff plugin\n\n  Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n    value: PREFIXES\n  });\n})(prism);\n/* \"prismjs/components/prism-git\" */\n\n\nprism.languages.git = {\n  /*\n   * A simple one line comment like in a git status command\n   * For instance:\n   * $ git status\n   * # On branch infinite-scroll\n   * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n   * # and have 1 and 2 different commits each, respectively.\n   * nothing to commit (working directory clean)\n   */\n  'comment': /^#.*/m,\n\n  /*\n   * Regexp to match the changed lines in a git diff output. Check the example below.\n   */\n  'deleted': /^[-–].*/m,\n  'inserted': /^\\+.*/m,\n\n  /*\n   * a string (double and simple quote)\n   */\n  'string': /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\n  /*\n   * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n   * For instance:\n   * $ git add file.txt\n   */\n  'command': {\n    pattern: /^.*\\$ git .*$/m,\n    inside: {\n      /*\n       * A git command can contain a parameter starting by a single or a double dash followed by a string\n       * For instance:\n       * $ git diff --cached\n       * $ git log -p\n       */\n      'parameter': /\\s--?\\w+/\n    }\n  },\n\n  /*\n   * Coordinates displayed in a git diff command\n   * For instance:\n   * $ git diff\n   * diff --git file.txt file.txt\n   * index 6214953..1d54a52 100644\n   * --- file.txt\n   * +++ file.txt\n   * @@ -1 +1,2 @@\n   * -Here's my tetx file\n   * +Here's my text file\n   * +And this is the second line\n   */\n  'coord': /^@@.*@@$/m,\n\n  /*\n   * Match a \"commit [SHA1]\" line in a git log output.\n   * For instance:\n   * $ git log\n   * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n   * Author: lgiraudel\n   * Date:   Mon Feb 17 11:18:34 2014 +0100\n   *\n   *     Add of a new line\n   */\n  'commit-sha1': /^commit \\w{40}$/m\n};\n/* \"prismjs/components/prism-go\" */\n\nprism.languages.go = prism.languages.extend('clike', {\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n    lookbehind: true,\n    greedy: true\n  },\n  'keyword': /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n  'boolean': /\\b(?:_|false|iota|nil|true)\\b/,\n  'number': [// binary and octal integers\n  /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n  /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n  /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i],\n  'operator': /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n  'builtin': /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n});\nprism.languages.insertBefore('go', 'string', {\n  'char': {\n    pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n    greedy: true\n  }\n});\ndelete prism.languages.go['class-name'];\n/* \"prismjs/components/prism-markup-templating\" */\n\n(function (Prism) {\n  /**\n   * Returns the placeholder for the given language id and index.\n   *\n   * @param {string} language\n   * @param {string|number} index\n   * @returns {string}\n   */\n  function getPlaceholder(language, index) {\n    return '___' + language.toUpperCase() + index + '___';\n  }\n\n  Object.defineProperties(Prism.languages['markup-templating'] = {}, {\n    buildPlaceholders: {\n      /**\n       * Tokenize all inline templating expressions matching `placeholderPattern`.\n       *\n       * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n       * `true` will be replaced.\n       *\n       * @param {object} env The environment of the `before-tokenize` hook.\n       * @param {string} language The language id.\n       * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n       * @param {(match: string) => boolean} [replaceFilter]\n       */\n      value: function value(env, language, placeholderPattern, replaceFilter) {\n        if (env.language !== language) {\n          return;\n        }\n\n        var tokenStack = env.tokenStack = [];\n        env.code = env.code.replace(placeholderPattern, function (match) {\n          if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n            return match;\n          }\n\n          var i = tokenStack.length;\n          var placeholder; // Check for existing strings\n\n          while (env.code.indexOf(placeholder = getPlaceholder(language, i)) !== -1) {\n            ++i;\n          } // Create a sparse array\n\n\n          tokenStack[i] = match;\n          return placeholder;\n        }); // Switch the grammar to markup\n\n        env.grammar = Prism.languages.markup;\n      }\n    },\n    tokenizePlaceholders: {\n      /**\n       * Replace placeholders with proper tokens after tokenizing.\n       *\n       * @param {object} env The environment of the `after-tokenize` hook.\n       * @param {string} language The language id.\n       */\n      value: function value(env, language) {\n        if (env.language !== language || !env.tokenStack) {\n          return;\n        } // Switch the grammar back\n\n\n        env.grammar = Prism.languages[language];\n        var j = 0;\n        var keys = Object.keys(env.tokenStack);\n\n        function walkTokens(tokens) {\n          for (var i = 0; i < tokens.length; i++) {\n            // all placeholders are replaced already\n            if (j >= keys.length) {\n              break;\n            }\n\n            var token = tokens[i];\n\n            if (typeof token === 'string' || token.content && typeof token.content === 'string') {\n              var k = keys[j];\n              var t = env.tokenStack[k];\n              var s = typeof token === 'string' ? token : token.content;\n              var placeholder = getPlaceholder(language, k);\n              var index = s.indexOf(placeholder);\n\n              if (index > -1) {\n                ++j;\n                var before = s.substring(0, index);\n                var middle = new Prism.Token(language, Prism.tokenize(t, env.grammar), 'language-' + language, t);\n                var after = s.substring(index + placeholder.length);\n                var replacement = [];\n\n                if (before) {\n                  replacement.push.apply(replacement, walkTokens([before]));\n                }\n\n                replacement.push(middle);\n\n                if (after) {\n                  replacement.push.apply(replacement, walkTokens([after]));\n                }\n\n                if (typeof token === 'string') {\n                  tokens.splice.apply(tokens, [i, 1].concat(replacement));\n                } else {\n                  token.content = replacement;\n                }\n              }\n            } else if (token.content\n            /* && typeof token.content !== 'string' */\n            ) {\n              walkTokens(token.content);\n            }\n          }\n\n          return tokens;\n        }\n\n        walkTokens(env.tokens);\n      }\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-handlebars\" */\n\n\n(function (Prism) {\n  Prism.languages.handlebars = {\n    'comment': /\\{\\{![\\s\\S]*?\\}\\}/,\n    'delimiter': {\n      pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n      alias: 'punctuation'\n    },\n    'string': /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'number': /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n    'boolean': /\\b(?:false|true)\\b/,\n    'block': {\n      pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    'brackets': {\n      pattern: /\\[[^\\]]+\\]/,\n      inside: {\n        punctuation: /\\[|\\]/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    'punctuation': /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n    'variable': /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n  };\n  Prism.hooks.add('before-tokenize', function (env) {\n    var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g;\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'handlebars', handlebarsPattern);\n  });\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'handlebars');\n  });\n  Prism.languages.hbs = Prism.languages.handlebars;\n})(prism);\n/* \"prismjs/components/prism-json\" */\n// https://www.json.org/json-en.html\n\n\nprism.languages.json = {\n  'property': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string': {\n    pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n    lookbehind: true,\n    greedy: true\n  },\n  'comment': {\n    pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    greedy: true\n  },\n  'number': /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n  'punctuation': /[{}[\\],]/,\n  'operator': /:/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  }\n};\nprism.languages.webmanifest = prism.languages.json;\n/* \"prismjs/components/prism-less\" */\n\n/* FIXME :\n :extend() is not handled specifically : its highlighting is buggy.\n Mixin usage must be inside a ruleset to be highlighted.\n At-rules (e.g. import) containing interpolations are buggy.\n Detached rulesets are highlighted as at-rules.\n A comment before a mixin usage prevents the latter to be properly highlighted.\n */\n\nprism.languages.less = prism.languages.extend('css', {\n  'comment': [/\\/\\*[\\s\\S]*?\\*\\//, {\n    pattern: /(^|[^\\\\])\\/\\/.*/,\n    lookbehind: true\n  }],\n  'atrule': {\n    pattern: /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      'punctuation': /[:()]/\n    }\n  },\n  // selectors and mixins are considered the same\n  'selector': {\n    pattern: /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n    inside: {\n      // mixin parameters\n      'variable': /@+[\\w-]+/\n    }\n  },\n  'property': /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n  'operator': /[+\\-*\\/]/\n});\nprism.languages.insertBefore('less', 'property', {\n  'variable': [// Variable declaration (the colon must be consumed!)\n  {\n    pattern: /@[\\w-]+\\s*:/,\n    inside: {\n      'punctuation': /:/\n    }\n  }, // Variable usage\n  /@@?[\\w-]+/],\n  'mixin-usage': {\n    pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n    lookbehind: true,\n    alias: 'function'\n  }\n});\n/* \"prismjs/components/prism-makefile\" */\n\nprism.languages.makefile = {\n  'comment': {\n    pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n    lookbehind: true\n  },\n  'string': {\n    pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    greedy: true\n  },\n  'builtin-target': {\n    pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    alias: 'builtin'\n  },\n  'target': {\n    pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n    alias: 'symbol',\n    inside: {\n      'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n    }\n  },\n  'variable': /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n  // Directives\n  'keyword': /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n  'function': {\n    pattern: /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n    lookbehind: true\n  },\n  'operator': /(?:::|[?:+!])?=|[|@]/,\n  'punctuation': /[:;(){}]/\n};\n/* \"prismjs/components/prism-objectivec\" */\n\nprism.languages.objectivec = prism.languages.extend('c', {\n  'string': {\n    pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n    greedy: true\n  },\n  'keyword': /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n  'operator': /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n});\ndelete prism.languages.objectivec['class-name'];\nprism.languages.objc = prism.languages.objectivec;\n/* \"prismjs/components/prism-ocaml\" */\n// https://ocaml.org/manual/lex.html\n\nprism.languages.ocaml = {\n  'comment': {\n    pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n    greedy: true\n  },\n  'char': {\n    pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n    greedy: true\n  },\n  'string': [{\n    pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  }, {\n    pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n    greedy: true\n  }],\n  'number': [// binary and octal\n  /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n  /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n  /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i],\n  'directive': {\n    pattern: /\\B#\\w+/,\n    alias: 'property'\n  },\n  'label': {\n    pattern: /\\B~\\w+/,\n    alias: 'property'\n  },\n  'type-variable': {\n    pattern: /\\B'\\w+/,\n    alias: 'function'\n  },\n  'variant': {\n    pattern: /`\\w+/,\n    alias: 'symbol'\n  },\n  // For the list of keywords and operators,\n  // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n  'keyword': /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n  'boolean': /\\b(?:false|true)\\b/,\n  'operator-like-punctuation': {\n    pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n    alias: 'punctuation'\n  },\n  // Custom operators are allowed\n  'operator': /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n  'punctuation': /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n};\n/* \"prismjs/components/prism-python\" */\n\nprism.languages.python = {\n  'comment': {\n    pattern: /(^|[^\\\\])#.*/,\n    lookbehind: true,\n    greedy: true\n  },\n  'string-interpolation': {\n    pattern: /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n    greedy: true,\n    inside: {\n      'interpolation': {\n        // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n        pattern: /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n        lookbehind: true,\n        inside: {\n          'format-spec': {\n            pattern: /(:)[^:(){}]+(?=\\}$)/,\n            lookbehind: true\n          },\n          'conversion-option': {\n            pattern: /![sra](?=[:}]$)/,\n            alias: 'punctuation'\n          },\n          rest: null\n        }\n      },\n      'string': /[\\s\\S]+/\n    }\n  },\n  'triple-quoted-string': {\n    pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n    greedy: true,\n    alias: 'string'\n  },\n  'string': {\n    pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n    greedy: true\n  },\n  'function': {\n    pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n    lookbehind: true\n  },\n  'class-name': {\n    pattern: /(\\bclass\\s+)\\w+/i,\n    lookbehind: true\n  },\n  'decorator': {\n    pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n    lookbehind: true,\n    alias: ['annotation', 'punctuation'],\n    inside: {\n      'punctuation': /\\./\n    }\n  },\n  'keyword': /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n  'builtin': /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n  'boolean': /\\b(?:False|None|True)\\b/,\n  'number': /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n  'operator': /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n  'punctuation': /[{}[\\];(),.:]/\n};\nprism.languages.python['string-interpolation'].inside['interpolation'].inside.rest = prism.languages.python;\nprism.languages.py = prism.languages.python;\n/* \"prismjs/components/prism-reason\" */\n\nprism.languages.reason = prism.languages.extend('clike', {\n  'string': {\n    pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n    greedy: true\n  },\n  // 'class-name' must be matched *after* 'constructor' defined below\n  'class-name': /\\b[A-Z]\\w*/,\n  'keyword': /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n  'operator': /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n});\nprism.languages.insertBefore('reason', 'class-name', {\n  'char': {\n    pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n    greedy: true\n  },\n  // Negative look-ahead prevents from matching things like String.capitalize\n  'constructor': /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n  'label': {\n    pattern: /\\b[a-z]\\w*(?=::)/,\n    alias: 'symbol'\n  }\n}); // We can't match functions property, so let's not even try.\n\ndelete prism.languages.reason.function;\n/* \"prismjs/components/prism-sass\" */\n\n(function (Prism) {\n  Prism.languages.sass = Prism.languages.extend('css', {\n    // Sass comments don't need to be closed, only indented\n    'comment': {\n      pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n  Prism.languages.insertBefore('sass', 'atrule', {\n    // We want to consume the whole line\n    'atrule-line': {\n      // Includes support for = and + shortcuts\n      pattern: /^(?:[ \\t]*)[@+=].+/m,\n      greedy: true,\n      inside: {\n        'atrule': /(?:@[\\w-]+|[+=])/\n      }\n    }\n  });\n  delete Prism.languages.sass.atrule;\n  var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n  var operator = [/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/, {\n    pattern: /(\\s)-(?=\\s)/,\n    lookbehind: true\n  }];\n  Prism.languages.insertBefore('sass', 'property', {\n    // We want to consume the whole line\n    'variable-line': {\n      pattern: /^[ \\t]*\\$.+/m,\n      greedy: true,\n      inside: {\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator\n      }\n    },\n    // We want to consume the whole line\n    'property-line': {\n      pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n      greedy: true,\n      inside: {\n        'property': [/[^:\\s]+(?=\\s*:)/, {\n          pattern: /(:)[^:\\s]+/,\n          lookbehind: true\n        }],\n        'punctuation': /:/,\n        'variable': variable,\n        'operator': operator,\n        'important': Prism.languages.sass.important\n      }\n    }\n  });\n  delete Prism.languages.sass.property;\n  delete Prism.languages.sass.important; // Now that whole lines for other patterns are consumed,\n  // what's left should be selectors\n\n  Prism.languages.insertBefore('sass', 'punctuation', {\n    'selector': {\n      pattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n      lookbehind: true,\n      greedy: true\n    }\n  });\n})(prism);\n/* \"prismjs/components/prism-scss\" */\n\n\nprism.languages.scss = prism.languages.extend('css', {\n  'comment': {\n    pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n    lookbehind: true\n  },\n  'atrule': {\n    pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n    inside: {\n      'rule': /@[\\w-]+/ // See rest below\n\n    }\n  },\n  // url, compassified\n  'url': /(?:[-a-z]+-)?url(?=\\()/i,\n  // CSS selector regex is not appropriate for Sass\n  // since there can be lot more things (var, @ directive, nesting..)\n  // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n  // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n  // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n  // can \"pass\" as a selector- e.g: proper#{$erty})\n  // this one was hard to do, so please be careful if you edit this one :)\n  'selector': {\n    // Initial look-ahead is used to prevent matching of blank selectors\n    pattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n    inside: {\n      'parent': {\n        pattern: /&/,\n        alias: 'important'\n      },\n      'placeholder': /%[-\\w]+/,\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  },\n  'property': {\n    pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n    inside: {\n      'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    }\n  }\n});\nprism.languages.insertBefore('scss', 'atrule', {\n  'keyword': [/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i, {\n    pattern: /( )(?:from|through)(?= )/,\n    lookbehind: true\n  }]\n});\nprism.languages.insertBefore('scss', 'important', {\n  // var and interpolated vars\n  'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\nprism.languages.insertBefore('scss', 'function', {\n  'module-modifier': {\n    pattern: /\\b(?:as|hide|show|with)\\b/i,\n    alias: 'keyword'\n  },\n  'placeholder': {\n    pattern: /%[-\\w]+/,\n    alias: 'selector'\n  },\n  'statement': {\n    pattern: /\\B!(?:default|optional)\\b/i,\n    alias: 'keyword'\n  },\n  'boolean': /\\b(?:false|true)\\b/,\n  'null': {\n    pattern: /\\bnull\\b/,\n    alias: 'keyword'\n  },\n  'operator': {\n    pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n    lookbehind: true\n  }\n});\nprism.languages.scss['atrule'].inside.rest = prism.languages.scss;\n/* \"prismjs/components/prism-stylus\" */\n\n(function (Prism) {\n  var unit = {\n    pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n    lookbehind: true\n  }; // 123 -123 .123 -.123 12.3 -12.3\n\n  var number = {\n    pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n    lookbehind: true\n  };\n  var inside = {\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    'url': {\n      pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n      greedy: true\n    },\n    'string': {\n      pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    'interpolation': null,\n    // See below\n    'func': null,\n    // See below\n    'important': /\\B!(?:important|optional)\\b/i,\n    'keyword': {\n      pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n      lookbehind: true\n    },\n    'hexcode': /#[\\da-f]{3,6}/i,\n    'color': [/\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i, {\n      pattern: /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n      inside: {\n        'unit': unit,\n        'number': number,\n        'function': /[\\w-]+(?=\\()/,\n        'punctuation': /[(),]/\n      }\n    }],\n    'entity': /\\\\[\\da-f]{1,8}/i,\n    'unit': unit,\n    'boolean': /\\b(?:false|true)\\b/,\n    'operator': [// We want non-word chars around \"-\" because it is\n    // accepted in property names.\n    /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/],\n    'number': number,\n    'punctuation': /[{}()\\[\\];:,]/\n  };\n  inside['interpolation'] = {\n    pattern: /\\{[^\\r\\n}:]+\\}/,\n    alias: 'variable',\n    inside: {\n      'delimiter': {\n        pattern: /^\\{|\\}$/,\n        alias: 'punctuation'\n      },\n      rest: inside\n    }\n  };\n  inside['func'] = {\n    pattern: /[\\w-]+\\([^)]*\\).*/,\n    inside: {\n      'function': /^[^(]+/,\n      rest: inside\n    }\n  };\n  Prism.languages.stylus = {\n    'atrule-declaration': {\n      pattern: /(^[ \\t]*)@.+/m,\n      lookbehind: true,\n      inside: {\n        'atrule': /^@[\\w-]+/,\n        rest: inside\n      }\n    },\n    'variable-declaration': {\n      pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n      lookbehind: true,\n      inside: {\n        'variable': /^\\S+/,\n        rest: inside\n      }\n    },\n    'statement': {\n      pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n      lookbehind: true,\n      inside: {\n        'keyword': /^\\S+/,\n        rest: inside\n      }\n    },\n    // A property/value pair cannot end with a comma or a brace\n    // It cannot have indented content unless it ended with a semicolon\n    'property-declaration': {\n      pattern: /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'property': {\n          pattern: /^[^\\s:]+/,\n          inside: {\n            'interpolation': inside.interpolation\n          }\n        },\n        rest: inside\n      }\n    },\n    // A selector can contain parentheses only as part of a pseudo-element\n    // It can span multiple lines.\n    // It must end with a comma or an accolade or have indented content.\n    'selector': {\n      pattern: /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n      lookbehind: true,\n      inside: {\n        'interpolation': inside.interpolation,\n        'comment': inside.comment,\n        'punctuation': /[{},]/\n      }\n    },\n    'func': inside.func,\n    'string': inside.string,\n    'comment': {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'interpolation': inside.interpolation,\n    'punctuation': /[{}()\\[\\];:.]/\n  };\n})(prism);\n/* \"prismjs/components/prism-tsx\" */\n\n\n(function (Prism) {\n  var typescript = Prism.util.clone(Prism.languages.typescript);\n  Prism.languages.tsx = Prism.languages.extend('jsx', typescript); // doesn't work with TS because TS is too complex\n\n  delete Prism.languages.tsx['parameter'];\n  delete Prism.languages.tsx['literal-property']; // This will prevent collisions between TSX tags and TS generic types.\n  // Idea by https://github.com/karlhorky\n  // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n\n  var tag = Prism.languages.tsx.tag;\n  tag.pattern = RegExp(/(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')', tag.pattern.flags);\n  tag.lookbehind = true;\n})(prism);\n/* \"prismjs/components/prism-wasm\" */\n\n\nprism.languages.wasm = {\n  'comment': [/\\(;[\\s\\S]*?;\\)/, {\n    pattern: /;;.*/,\n    greedy: true\n  }],\n  'string': {\n    pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n    greedy: true\n  },\n  'keyword': [{\n    pattern: /\\b(?:align|offset)=/,\n    inside: {\n      'operator': /=/\n    }\n  }, {\n    pattern: /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n    inside: {\n      'punctuation': /\\./\n    }\n  }, /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/],\n  'variable': /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n  'number': /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n  'punctuation': /[()]/\n};\nexport default prism;","import prism from '../prism/index.js';\nexport { default as Prism } from '../prism/index.js';\nimport theme from '../themes/duotoneDark';\nimport { Component } from 'react';\nvar defaultProps = {\n  // $FlowFixMe\n  Prism: prism,\n  theme: theme\n};\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nvar newlineRe = /\\r\\n|\\r|\\n/; // Empty lines need to contain a single empty token, denoted with { empty: true }\n\nvar normalizeEmptyLines = function normalizeEmptyLines(line) {\n  if (line.length === 0) {\n    line.push({\n      types: [\"plain\"],\n      content: \"\\n\",\n      empty: true\n    });\n  } else if (line.length === 1 && line[0].content === \"\") {\n    line[0].content = \"\\n\";\n    line[0].empty = true;\n  }\n};\n\nvar appendTypes = function appendTypes(types, add) {\n  var typesSize = types.length;\n\n  if (typesSize > 0 && types[typesSize - 1] === add) {\n    return types;\n  }\n\n  return types.concat(add);\n}; // Takes an array of Prism's tokens and groups them by line, turning plain\n// strings into tokens as well. Tokens can become recursive in some cases,\n// which means that their types are concatenated. Plain-string tokens however\n// are always of type \"plain\".\n// This is not recursive to avoid exceeding the call-stack limit, since it's unclear\n// how nested Prism's tokens can become\n\n\nvar normalizeTokens = function normalizeTokens(tokens) {\n  var typeArrStack = [[]];\n  var tokenArrStack = [tokens];\n  var tokenArrIndexStack = [0];\n  var tokenArrSizeStack = [tokens.length];\n  var i = 0;\n  var stackIndex = 0;\n  var currentLine = [];\n  var acc = [currentLine];\n\n  while (stackIndex > -1) {\n    while ((i = tokenArrIndexStack[stackIndex]++) < tokenArrSizeStack[stackIndex]) {\n      var content = void 0;\n      var types = typeArrStack[stackIndex];\n      var tokenArr = tokenArrStack[stackIndex];\n      var token = tokenArr[i]; // Determine content and append type to types if necessary\n\n      if (typeof token === \"string\") {\n        types = stackIndex > 0 ? types : [\"plain\"];\n        content = token;\n      } else {\n        types = appendTypes(types, token.type);\n\n        if (token.alias) {\n          types = appendTypes(types, token.alias);\n        }\n\n        content = token.content;\n      } // If token.content is an array, increase the stack depth and repeat this while-loop\n\n\n      if (typeof content !== \"string\") {\n        stackIndex++;\n        typeArrStack.push(types);\n        tokenArrStack.push(content);\n        tokenArrIndexStack.push(0);\n        tokenArrSizeStack.push(content.length);\n        continue;\n      } // Split by newlines\n\n\n      var splitByNewlines = content.split(newlineRe);\n      var newlineCount = splitByNewlines.length;\n      currentLine.push({\n        types: types,\n        content: splitByNewlines[0]\n      }); // Create a new line for each string on a new line\n\n      for (var i$1 = 1; i$1 < newlineCount; i$1++) {\n        normalizeEmptyLines(currentLine);\n        acc.push(currentLine = []);\n        currentLine.push({\n          types: types,\n          content: splitByNewlines[i$1]\n        });\n      }\n    } // Decreate the stack depth\n\n\n    stackIndex--;\n    typeArrStack.pop();\n    tokenArrStack.pop();\n    tokenArrIndexStack.pop();\n    tokenArrSizeStack.pop();\n  }\n\n  normalizeEmptyLines(currentLine);\n  return acc;\n};\n\nvar themeToDict = function themeToDict(theme, language) {\n  var plain = theme.plain; // $FlowFixMe\n\n  var base = Object.create(null);\n  var themeDict = theme.styles.reduce(function (acc, themeEntry) {\n    var languages = themeEntry.languages;\n    var style = themeEntry.style;\n\n    if (languages && !languages.includes(language)) {\n      return acc;\n    }\n\n    themeEntry.types.forEach(function (type) {\n      // $FlowFixMe\n      var accStyle = _extends({}, acc[type], style);\n\n      acc[type] = accStyle;\n    });\n    return acc;\n  }, base); // $FlowFixMe\n\n  themeDict.root = plain; // $FlowFixMe\n\n  themeDict.plain = _extends({}, plain, {\n    backgroundColor: null\n  });\n  return themeDict;\n};\n\nfunction objectWithoutProperties(obj, exclude) {\n  var target = {};\n\n  for (var k in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, k) && exclude.indexOf(k) === -1) target[k] = obj[k];\n  }\n\n  return target;\n}\n\nvar Highlight = /*@__PURE__*/function (Component) {\n  function Highlight() {\n    var this$1 = this;\n    var args = [],\n        len = arguments.length;\n\n    while (len--) {\n      args[len] = arguments[len];\n    }\n\n    Component.apply(this, args);\n\n    _defineProperty(this, \"getThemeDict\", function (props) {\n      if (this$1.themeDict !== undefined && props.theme === this$1.prevTheme && props.language === this$1.prevLanguage) {\n        return this$1.themeDict;\n      }\n\n      this$1.prevTheme = props.theme;\n      this$1.prevLanguage = props.language;\n      var themeDict = props.theme ? themeToDict(props.theme, props.language) : undefined;\n      return this$1.themeDict = themeDict;\n    });\n\n    _defineProperty(this, \"getLineProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"line\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token-line\",\n        style: undefined,\n        key: undefined\n      });\n\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict !== undefined) {\n        output.style = themeDict.plain;\n      }\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"getStyleForToken\", function (ref) {\n      var types = ref.types;\n      var empty = ref.empty;\n      var typesSize = types.length;\n      var themeDict = this$1.getThemeDict(this$1.props);\n\n      if (themeDict === undefined) {\n        return undefined;\n      } else if (typesSize === 1 && types[0] === \"plain\") {\n        return empty ? {\n          display: \"inline-block\"\n        } : undefined;\n      } else if (typesSize === 1 && !empty) {\n        return themeDict[types[0]];\n      }\n\n      var baseStyle = empty ? {\n        display: \"inline-block\"\n      } : {}; // $FlowFixMe\n\n      var typeStyles = types.map(function (type) {\n        return themeDict[type];\n      });\n      return Object.assign.apply(Object, [baseStyle].concat(typeStyles));\n    });\n\n    _defineProperty(this, \"getTokenProps\", function (ref) {\n      var key = ref.key;\n      var className = ref.className;\n      var style = ref.style;\n      var token = ref.token;\n      var rest$1 = objectWithoutProperties(ref, [\"key\", \"className\", \"style\", \"token\"]);\n      var rest = rest$1;\n\n      var output = _extends({}, rest, {\n        className: \"token \" + token.types.join(\" \"),\n        children: token.content,\n        style: this$1.getStyleForToken(token),\n        key: undefined\n      });\n\n      if (style !== undefined) {\n        output.style = output.style !== undefined ? _extends({}, output.style, style) : style;\n      }\n\n      if (key !== undefined) {\n        output.key = key;\n      }\n\n      if (className) {\n        output.className += \" \" + className;\n      }\n\n      return output;\n    });\n\n    _defineProperty(this, \"tokenize\", function (Prism, code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language,\n        tokens: []\n      };\n      Prism.hooks.run(\"before-tokenize\", env);\n      var tokens = env.tokens = Prism.tokenize(env.code, env.grammar, env.language);\n      Prism.hooks.run(\"after-tokenize\", env);\n      return tokens;\n    });\n  }\n\n  if (Component) Highlight.__proto__ = Component;\n  Highlight.prototype = Object.create(Component && Component.prototype);\n  Highlight.prototype.constructor = Highlight;\n\n  Highlight.prototype.render = function render() {\n    var ref = this.props;\n    var Prism = ref.Prism;\n    var language = ref.language;\n    var code = ref.code;\n    var children = ref.children;\n    var themeDict = this.getThemeDict(this.props);\n    var grammar = Prism.languages[language];\n    var mixedTokens = grammar !== undefined ? this.tokenize(Prism, code, grammar, language) : [code];\n    var tokens = normalizeTokens(mixedTokens);\n    return children({\n      tokens: tokens,\n      className: \"prism-code language-\" + language,\n      style: themeDict !== undefined ? themeDict.root : {},\n      getLineProps: this.getLineProps,\n      getTokenProps: this.getTokenProps\n    });\n  };\n\n  return Highlight;\n}(Component);\n\nexport default Highlight;\nexport { defaultProps };","// Duotone Dark\n// Author: Simurai, adapted from DuoTone themes for Atom (http://simurai.com/projects/2016/01/01/duotone-themes)\n// Conversion: Bram de Haan (http://atelierbram.github.io/Base2Tone-prism/output/prism/prism-base2tone-evening-dark.css)\n// Generated with Base16 Builder (https://github.com/base16-builder/base16-builder)\nvar theme = {\n  plain: {\n    backgroundColor: \"#2a2734\",\n    color: \"#9a86fd\"\n  },\n  styles: [{\n    types: [\"comment\", \"prolog\", \"doctype\", \"cdata\", \"punctuation\"],\n    style: {\n      color: \"#6c6783\"\n    }\n  }, {\n    types: [\"namespace\"],\n    style: {\n      opacity: 0.7\n    }\n  }, {\n    types: [\"tag\", \"operator\", \"number\"],\n    style: {\n      color: \"#e09142\"\n    }\n  }, {\n    types: [\"property\", \"function\"],\n    style: {\n      color: \"#9a86fd\"\n    }\n  }, {\n    types: [\"tag-id\", \"selector\", \"atrule-id\"],\n    style: {\n      color: \"#eeebff\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }, {\n    types: [\"boolean\", \"string\", \"entity\", \"url\", \"attr-value\", \"keyword\", \"control\", \"directive\", \"unit\", \"statement\", \"regex\", \"atrule\", \"placeholder\", \"variable\"],\n    style: {\n      color: \"#ffcc99\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      textDecorationLine: \"line-through\"\n    }\n  }, {\n    types: [\"inserted\"],\n    style: {\n      textDecorationLine: \"underline\"\n    }\n  }, {\n    types: [\"italic\"],\n    style: {\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"important\", \"bold\"],\n    style: {\n      fontWeight: \"bold\"\n    }\n  }, {\n    types: [\"important\"],\n    style: {\n      color: \"#c4b9fe\"\n    }\n  }]\n};\nexport default theme;","// Original: https://github.com/dracula/visual-studio-code\n// Converted automatically using ./tools/themeFromVsCode\nvar theme = {\n  plain: {\n    color: \"#F8F8F2\",\n    backgroundColor: \"#282A36\"\n  },\n  styles: [{\n    types: [\"prolog\", \"constant\", \"builtin\"],\n    style: {\n      color: \"rgb(189, 147, 249)\"\n    }\n  }, {\n    types: [\"inserted\", \"function\"],\n    style: {\n      color: \"rgb(80, 250, 123)\"\n    }\n  }, {\n    types: [\"deleted\"],\n    style: {\n      color: \"rgb(255, 85, 85)\"\n    }\n  }, {\n    types: [\"changed\"],\n    style: {\n      color: \"rgb(255, 184, 108)\"\n    }\n  }, {\n    types: [\"punctuation\", \"symbol\"],\n    style: {\n      color: \"rgb(248, 248, 242)\"\n    }\n  }, {\n    types: [\"string\", \"char\", \"tag\", \"selector\"],\n    style: {\n      color: \"rgb(255, 121, 198)\"\n    }\n  }, {\n    types: [\"keyword\", \"variable\"],\n    style: {\n      color: \"rgb(189, 147, 249)\",\n      fontStyle: \"italic\"\n    }\n  }, {\n    types: [\"comment\"],\n    style: {\n      color: \"rgb(98, 114, 164)\"\n    }\n  }, {\n    types: [\"attr-name\"],\n    style: {\n      color: \"rgb(241, 250, 140)\"\n    }\n  }]\n};\nexport default theme;","import React, { ReactNode } from 'react'\nimport Highlight, { defaultProps, Prism } from 'prism-react-renderer'\nimport dracula from 'prism-react-renderer/themes/dracula';\n\n// @ts-ignore\nconst root = (typeof global !== \"undefined\" ? global : window).Prism = Prism;\nrequire(\"prismjs/components/prism-rust\");\nrequire(\"prismjs/components/prism-java\");\nrequire(\"prismjs/components/prism-ruby\");\n\nconst codeBlock = ({ children }: any) => {\n  const className = children.props.className || '';\n  const matches = className.match(/language-(?<lang>.*)/);\n  const language = matches && matches.groups && matches.groups.lang ? matches.groups.lang : ''\n  return (\n    <Highlight {...defaultProps} theme={dracula} code={children.props.children} language={language}>\n      {({ className, style, tokens, getLineProps, getTokenProps }) => {\n        tokens.pop();\n        return (\n          <pre className={className} style={style}>\n            {tokens.map((line, i) => (\n              <div {...getLineProps({ line, key: i })}>\n                {line.map((token, key) => (\n                  <span {...getTokenProps({ token, key })} />\n                ))}\n              </div>\n            ))}\n          </pre>\n        )\n      }}\n    </Highlight>\n  )\n}\n\nexport default codeBlock;","import * as React from \"react\"\nimport Header from \"./header\"\nimport styled from \"styled-components\"\nimport { GlobalStyle } from \"../pages\";\nimport Footer from \"./footer\";\nimport { MDXProvider } from '@mdx-js/react'\nimport CodeBlock from './codeBlock'\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: 70rem;\n  background-color: var(--background-color);\n  color: var(--font-color);\n`;\n\nconst components = {\n  pre: CodeBlock\n}\n\nconst Layout = ({ children }: any) => {\n\n  return (\n      <Wrapper>\n        <GlobalStyle />\n        <MDXProvider components={components} >\n        <Header />\n        <main>{children}</main>\n        <Footer />\n        </MDXProvider>\n      </Wrapper>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"terminal.css\"\n\ntype DataProps = {\n  description?: any,\n  lang?: any,\n  title?: any,\n  children?: any,\n}\n\nconst Seo: React.FC<DataProps> = ({ description, lang, title, children }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query Seo {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nSeo.defaultProps = {\n  description: ``,\n}\n\nSeo.propTypes = {\n  description: PropTypes.string,\n  title: PropTypes.string.isRequired,\n}\n\nexport default Seo\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledWrapper = styled.div`\n   border-radius : 5px;\n   background-color: var(--header-font-color);\n   display: inline-block;\n   margin-right: 6px;\n`\n\nconst Text = styled.p`\n  font-size: 14px;\n  text-align: center;\n  margin: 2px 10px 2px;\n`\n\nconst Tag = ({ children }: TagProps) => {\n  return (\n    <StyledWrapper>\n      <Text>#{children}</Text>\n    </StyledWrapper>\n  )\n}\n\ninterface TagProps {\n  children: string\n}\n\nexport default Tag;\n","\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport Tag from \"../elements/Tag\";\n\nconst StyledWrapper = styled.div`\n   margin-bottom: 10px;\n`\n\nconst TagSection = ({ tags }: TagProps) => {\n  const tagList = tags ? tags : [];\n\n  return (\n    <StyledWrapper>\n      {tagList.map((name) => {\n        return <Tag>{name}</Tag>;\n      })}\n    </StyledWrapper>\n  )\n}\n\ninterface TagProps {\n  tags: string[];\n}\n\nexport default TagSection;\n","import styled from \"styled-components\";\n\nconst h2Subtitle = styled.h2`\n    font-size: calc(2rem);\n    color: var(--color-tertiary);\n    margin-top: 96px;\n    margin-bottom: 16px;\n`;\n\nexport default h2Subtitle;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledWrapper = styled.div`\n`\n\nconst Text = styled.p`\n  font-size: 14px;\n  color: var(--color-gray-700);\n`\n\nconst SmallDate = ({ children }: DateProps) => {\n  return (\n    <StyledWrapper>\n      <Text>{children}</Text>\n    </StyledWrapper>\n  )\n}\n\ninterface DateProps {\n  children: string\n}\n\nexport default SmallDate;\n","import * as React from \"react\"\nimport { Link, graphql, PageProps } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { createGlobalStyle } from \"styled-components\"\nimport MajorHeading from \"../elements/MajorHeading\"\nimport TagSection from \"../components/tagSection\"\nimport SmallDate from \"../elements/SmallDate\"\n\nexport const GlobalStyle = createGlobalStyle`\n  :root {\n    --global-font-size: 20px;\n    --global-line-height: 1.4em;\n    --global-space: 10px;\n    --font-stack: Ubuntu Mono, Monaco, Lucida Console, Liberation Mono,\n    DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace,\n    serif;\n    --mono-font-stack: Ubuntu Mono, Monaco, Lucida Console, Liberation Mono,\n    DejaVu Sans Mono, Bitstream Vera Sans Mono, Courier New, monospace,\n    serif;\n    --background-color: #222225;\n    --page-width: 60em;\n    --font-color: #e8e9ed;\n    --font-dark-color: #151515;\n    --header-font-color: #7a3496;\n    --color-gray-700: #BFDBF7;\n    --color-tertiary: #ffdf2c;\n    --invert-font-color: #222225;\n    --secondary-color: #1F7A8C;\n    --tertiary-color: #a3abba;\n    --primary-color: #62c4ff;\n    --error-color: #A31621;\n\n    --info-color: #62c4ff;\n    --dark-info-color: #0DA2FB;\n    --warning-color: #c7b02c;\n    --dark-warning-color: #766400;\n    --danger-color: #A31621;\n    --dark-danger-color: #580006;\n\n    --progress-bar-background: #3f3f44;\n    --progress-bar-fill: #62c4ff;\n    --code-bg-color: #3f3f44;\n    --input-style: solid;\n    --display-h1-decoration: none;\n    --spacing-4: 4rem;\n    --spacing-0: 0;\n    --spacing-16: 4rem;\n  }\n  body {\n    background-color: var(--background-color);\n    color: var(--font-color);\n  }\n\n  ol li::before {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n  }\n\n  .no-line::after {\n    content: none;\n  }\n\n  code::after, code::before {\n    content: none;\n  }\n\n  .mermaid {\n    margin-top: 4em;\n    margin-bottom: 4em;\n\n  }\n\n  .bio-avatar {\n    margin-right: var(--spacing-4);\n    margin-bottom: var(--spacing-0);\n    min-width: 50px;\n    border-radius: 100%;\n  }\n\n  .bio {\n    display: flex;\n    margin-bottom: var(--spacing-16);\n  }\n\n  .bio p {\n    margin-top: 0.8em;\n    margin-bottom: var(--spacing-0);\n  }\n  \n  h1 {\n    display: block;\n    margin-top: 150px;\n    font-size: 46px;\n    margin-bottom: 5px;\n  }\n\n  h2 {\n    margin-top: 150px;\n    margin-bottom: 15px;\n    font-size: 36px;\n  }\n\n  h3 {\n    margin-bottom: 2px;\n    color: var(--dark-warning-color);\n    font-size: 26px;\n  }\n  \n  h4 {\n    margin-bottom: 2px;\n  }\n  \n  p span {\n    margin-top: 30px !important;\n    margin-bottom: 30px !important;\n  }\n\n  ol li::before {\n    display: inline;\n  }\n`\n\nconst BlogIndex = ({ data, location }: PageProps<Queries.IndexPageQuery>) => {\n  const siteTitle = data.site?.siteMetadata?.title || `Title`\n  const posts = data.allMdx.nodes\n\n  return (\n    <>\n      <Layout>\n        <ul>\n          {posts.map((post: any) => {\n            const title = post.frontmatter.title || post.fields.slug\n            const tags = !post.frontmatter.tags ? [] : post.frontmatter.tags.replaceAll(/\\s/g, '').split(',');\n\n            return (\n              <li key={post.fields.slug} className=\"no-line\">\n                <article\n                  className=\"post-list-item\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <MajorHeading>\n                    <Link to={post.fields.slug} itemProp=\"url\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </Link>\n                  </MajorHeading>\n                  <SmallDate>{post.frontmatter.date}</SmallDate>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\" />\n                  </section>\n                  <TagSection tags={tags} />\n                </article>\n              </li>\n            )\n          })}\n        </ul>\n      </Layout>\n    </>\n  )\n}\n\nexport default BlogIndex\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"All posts\" />\n\n\nexport const pageQuery = graphql`\n  query IndexPage {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n          tags\n        }\n      }\n    }\n  }\n`"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MDXContext","useMDXComponents","components","contextComponents","emptyObject","MDXProvider","_ref","children","disableParentContext","allComponents","Provider","Prism","keywords","classNamePrefix","className","pattern","RegExp","lookbehind","inside","languages","java","extend","greedy","clike","function","insertBefore","alias","namespace","replace","ruby","interpolation","percentExpression","join","symbolName","string","rb","multilineComment","rust","rest","uncurryThis","toObject","floor","Math","charAt","stringSlice","slice","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","module","exports","matched","str","position","captures","namedCaptures","replacement","tailPos","m","undefined","match","ch","capture","n","f","isObject","classof","MATCH","wellKnownSymbol","it","isRegExp","anObject","that","this","result","hasIndices","global","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","call","hasOwn","isPrototypeOf","regExpFlags","RegExpPrototype","prototype","R","flags","$String","String","argument","TypeError","$","requireObjectCoercible","isCallable","isNullOrUndefined","toString","getMethod","getRegExpFlags","getSubstitution","IS_PURE","REPLACE","$TypeError","indexOf","max","stringIndexOf","searchValue","fromIndex","proto","replaceAll","replaceValue","IS_REG_EXP","replacer","searchString","functionalReplace","searchLength","advanceBy","O","endOfLastMatch","useStaticQuery","site","siteMetadata","React","Link","to","FooterText","styled","Date","getFullYear","href","_inherits","subClass","superClass","create","constructor","setPrototypeOf","lang","uniqueId","plainTextGrammar","_","util","encode","tokens","Token","type","content","Array","isArray","map","o","objId","clone","deepClone","visited","id","hasOwnProperty","v","getLanguage","element","exec","toLowerCase","parentElement","setLanguage","language","classList","add","isActive","defaultActivation","no","contains","plain","plaintext","text","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","callback","property","propertyType","plugins","highlight","env","code","hooks","run","tokenize","stringify","tokenList","LinkedList","addAfter","head","matchGrammar","list","array","node","next","tail","toArray","all","name","callbacks","matchedStr","matchPattern","pos","lastIndex","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","currentNode","reach","removeCount","from","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","newNode","count","s","e","tag","classes","attributes","aliases","prism","default","markup","tagName","includedCdataInside","def","attrName","html","mathml","svg","xml","ssml","atom","rss","envVars","commandAfterHeredoc","insideString","bash","entity","variable","toBeCopied","shell","c","keyword","modName","cpp","css","addInlined","addAttribute","selectorInside","selector","unit","number","javascript","regex","js","comment","coffeescript","coffee","anchorOrAlias","properties","plainKey","createValuePattern","yaml","yml","inner","createInline","tableCell","tableRow","tableLine","markdown","punctuation","walkTokens","l","codeLang","codeBlock","cls","tagPattern","parseInt","Number","fromCodePoint","known","KNOWN_ENTITY_NAMES","autoloader","valueOf","random","loadLanguages","ele","document","getElementById","innerHTML","textContent","fromCharCode","md","graphql","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","offset","types","open","close","stackHeight","test","sql","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","counter","toUpperCase","tokenizeWithHooks","tokenizeInterpolationExpression","expression","tempGrammar","args","splice","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","placeholder","interpolationExpression","placeholders","substring","middle","afterTokens","concat","Boolean","supportedLanguages","stringContent","findTemplateStrings","embedded","typescript","typeInside","ts","withId","unshift","maybeClassNameTokens","space","braces","spread","re","jsx","stringifyToken","openedTags","notTagNorBrace","pop","openedBraces","plainText","diff","PREFIXES","prefix","git","go","buildPlaceholders","placeholderPattern","replaceFilter","tokenStack","tokenizePlaceholders","handlebars","hbs","json","webmanifest","less","makefile","objectivec","objc","ocaml","python","py","reason","sass","atrule","operator","important","scss","stylus","func","tsx","wasm","defaultProps","theme","backgroundColor","color","styles","style","opacity","textDecorationLine","fontStyle","fontWeight","_extends","assign","newlineRe","normalizeEmptyLines","line","empty","appendTypes","typesSize","themeToDict","base","themeDict","reduce","acc","themeEntry","includes","accStyle","objectWithoutProperties","exclude","Highlight","Component","this$1","len","props","prevTheme","prevLanguage","ref","output","getThemeDict","display","baseStyle","typeStyles","getStyleForToken","__proto__","render","typeArrStack","tokenArrStack","tokenArrIndexStack","tokenArrSizeStack","stackIndex","currentLine","splitByNewlines","split","newlineCount","i$1","normalizeTokens","getLineProps","getTokenProps","window","require","matches","groups","dracula","Wrapper","pre","CodeBlock","GlobalStyle","Header","Footer","Seo","description","title","metaDescription","defaultTitle","_site$siteMetadata","social","twitter","StyledWrapper","Text","tags","tagList","Tag","createGlobalStyle","data","posts","location","allMdx","nodes","Layout","post","frontmatter","fields","slug","itemScope","itemType","MajorHeading","itemProp","SmallDate","date","dangerouslySetInnerHTML","__html","excerpt","TagSection","Head"],"sourceRoot":""}